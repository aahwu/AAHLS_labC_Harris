-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity harris_response_Pipeline_VITIS_LOOP_325_1_VITIS_LOOP_326_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    SxxStream_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    SxxStream_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    SxxStream_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    SxxStream_empty_n : IN STD_LOGIC;
    SxxStream_read : OUT STD_LOGIC;
    SyyStream_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    SyyStream_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    SyyStream_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    SyyStream_empty_n : IN STD_LOGIC;
    SyyStream_read : OUT STD_LOGIC;
    SxyStream_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    SxyStream_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    SxyStream_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    SxyStream_empty_n : IN STD_LOGIC;
    SxyStream_read : OUT STD_LOGIC;
    RStream_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    RStream_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    RStream_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    RStream_full_n : IN STD_LOGIC;
    RStream_write : OUT STD_LOGIC;
    zext_ln325 : IN STD_LOGIC_VECTOR (20 downto 0) );
end;


architecture behav of harris_response_Pipeline_VITIS_LOOP_325_1_VITIS_LOOP_326_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_85E : STD_LOGIC_VECTOR (11 downto 0) := "100001011110";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv39_DD00 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000001101110100000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln325_fu_143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal SxxStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal SyyStream_blk_n : STD_LOGIC;
    signal SxyStream_blk_n : STD_LOGIC;
    signal RStream_blk_n : STD_LOGIC;
    signal zext_ln325_cast_fu_131_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln325_cast_reg_978 : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal Sxx_var_fu_160_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Sxx_var_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal Sxx_var_1_reg_1000 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_i7_reg_1006 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_i8_reg_1012 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_i9_reg_1018 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_i_reg_1024 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_i_reg_1030 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_i_reg_1036 : STD_LOGIC_VECTOR (31 downto 0);
    signal Syy_var_fu_234_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Syy_var_reg_1042 : STD_LOGIC_VECTOR (31 downto 0);
    signal Syy_var_1_reg_1048 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_i_reg_1054 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_i_reg_1060 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_i_reg_1066 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_i_reg_1072 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_i_reg_1078 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_i_reg_1084 : STD_LOGIC_VECTOR (31 downto 0);
    signal Sxy_var_fu_308_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Sxy_var_reg_1090 : STD_LOGIC_VECTOR (31 downto 0);
    signal Sxy_var_1_reg_1096 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_i_reg_1102 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_i_reg_1108 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_i_reg_1114 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_i_reg_1120 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_i_reg_1126 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_i_reg_1132 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_fu_382_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_reg_1138 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_1_fu_394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_1_reg_1144 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_2_fu_406_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_2_reg_1150 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_3_fu_418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_3_reg_1156 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_4_fu_430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_4_reg_1162 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_5_fu_442_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_5_reg_1168 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_6_fu_454_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_6_reg_1174 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_7_fu_466_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trace_7_reg_1180 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_386_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det1_reg_1186 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_390_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det2_reg_1191 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_398_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det1_1_reg_1196 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_402_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det2_1_reg_1201 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_410_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det1_2_reg_1206 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det2_2_reg_1211 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_422_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det1_3_reg_1216 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_426_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det2_3_reg_1221 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_434_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det1_4_reg_1226 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_438_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det2_4_reg_1231 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_446_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det1_5_reg_1236 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_450_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det2_5_reg_1241 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_458_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det1_6_reg_1246 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_462_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det2_6_reg_1251 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_470_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det1_7_reg_1256 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_474_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det2_7_reg_1261 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_478_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal traceSquare_reg_1266 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_fu_510_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_reg_1271 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_reg_1271_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_reg_1271_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_reg_1271_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_reg_1271_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_reg_1271_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_482_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal traceSquare_1_reg_1276 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_1_fu_514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_1_reg_1281 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_1_reg_1281_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_1_reg_1281_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_1_reg_1281_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_1_reg_1281_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_1_reg_1281_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_486_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal traceSquare_2_reg_1286 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_2_fu_518_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_2_reg_1291 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_2_reg_1291_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_2_reg_1291_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_2_reg_1291_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_2_reg_1291_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_2_reg_1291_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_490_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal traceSquare_3_reg_1296 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_3_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_3_reg_1301 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_3_reg_1301_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_3_reg_1301_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_3_reg_1301_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_3_reg_1301_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_3_reg_1301_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_494_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal traceSquare_4_reg_1306 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_4_fu_526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_4_reg_1311 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_4_reg_1311_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_4_reg_1311_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_4_reg_1311_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_4_reg_1311_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_4_reg_1311_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal traceSquare_5_reg_1316 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_5_fu_530_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_5_reg_1321 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_5_reg_1321_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_5_reg_1321_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_5_reg_1321_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_5_reg_1321_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_5_reg_1321_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_502_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal traceSquare_6_reg_1326 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_6_fu_534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_6_reg_1331 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_6_reg_1331_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_6_reg_1331_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_6_reg_1331_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_6_reg_1331_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_6_reg_1331_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal traceSquare_7_reg_1336 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_7_fu_538_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_7_reg_1341 : STD_LOGIC_VECTOR (31 downto 0);
    signal det_7_reg_1341_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_7_reg_1341_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_7_reg_1341_pp0_iter10_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_7_reg_1341_pp0_iter11_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal det_7_reg_1341_pp0_iter12_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_545_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_reg_1386 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_553_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_1_reg_1391 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_561_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_2_reg_1396 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_569_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_3_reg_1401 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_577_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_4_reg_1406 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_585_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_5_reg_1411 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_593_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_6_reg_1416 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_601_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal r_V_7_reg_1421 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Val2_s_reg_1426 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_1_reg_1431 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_1_reg_1436 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_3_reg_1441 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_reg_1446 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_5_reg_1451 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_reg_1456 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_7_reg_1461 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_4_reg_1466 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_9_reg_1471 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_5_reg_1476 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_11_reg_1481 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_reg_1486 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_13_reg_1491 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_reg_1496 : STD_LOGIC_VECTOR (38 downto 0);
    signal ret_V_15_reg_1501 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_var_fu_867_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_var_reg_1506 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_var_1_fu_879_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_var_1_reg_1511 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_fu_891_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_reg_1516 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_1_fu_903_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_1_reg_1521 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_2_fu_915_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_2_reg_1526 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_3_fu_927_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_3_reg_1531 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_4_fu_939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_4_reg_1536 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_5_fu_951_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln1695_5_reg_1541 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten_fu_96 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln325_fu_149_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_545_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_553_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_561_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_569_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_577_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_585_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_593_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_601_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal lhs_1_fu_606_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_fu_613_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal lhs_3_fu_638_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_2_fu_645_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal lhs_5_fu_670_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_4_fu_677_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal lhs_7_fu_702_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_6_fu_709_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal lhs_9_fu_734_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_8_fu_741_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal lhs_11_fu_766_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_10_fu_773_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal lhs_13_fu_798_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_12_fu_805_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal lhs_15_fu_830_p3 : STD_LOGIC_VECTOR (51 downto 0);
    signal ret_V_14_fu_837_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln1695_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1695_1_fu_874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1695_2_fu_886_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1695_3_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1695_4_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1695_5_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1695_6_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1695_7_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_386_ce : STD_LOGIC;
    signal grp_fu_390_ce : STD_LOGIC;
    signal grp_fu_398_ce : STD_LOGIC;
    signal grp_fu_402_ce : STD_LOGIC;
    signal grp_fu_410_ce : STD_LOGIC;
    signal grp_fu_414_ce : STD_LOGIC;
    signal grp_fu_422_ce : STD_LOGIC;
    signal grp_fu_426_ce : STD_LOGIC;
    signal grp_fu_434_ce : STD_LOGIC;
    signal grp_fu_438_ce : STD_LOGIC;
    signal grp_fu_446_ce : STD_LOGIC;
    signal grp_fu_450_ce : STD_LOGIC;
    signal grp_fu_458_ce : STD_LOGIC;
    signal grp_fu_462_ce : STD_LOGIC;
    signal grp_fu_470_ce : STD_LOGIC;
    signal grp_fu_474_ce : STD_LOGIC;
    signal grp_fu_478_ce : STD_LOGIC;
    signal grp_fu_482_ce : STD_LOGIC;
    signal grp_fu_486_ce : STD_LOGIC;
    signal grp_fu_490_ce : STD_LOGIC;
    signal grp_fu_494_ce : STD_LOGIC;
    signal grp_fu_498_ce : STD_LOGIC;
    signal grp_fu_502_ce : STD_LOGIC;
    signal grp_fu_506_ce : STD_LOGIC;
    signal grp_fu_545_ce : STD_LOGIC;
    signal grp_fu_553_ce : STD_LOGIC;
    signal grp_fu_561_ce : STD_LOGIC;
    signal grp_fu_569_ce : STD_LOGIC;
    signal grp_fu_577_ce : STD_LOGIC;
    signal grp_fu_585_ce : STD_LOGIC;
    signal grp_fu_593_ce : STD_LOGIC;
    signal grp_fu_601_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component harris_mul_32s_32s_32_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component harris_mul_32s_21ns_52_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (51 downto 0) );
    end component;


    component harris_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_32s_32s_32_5_1_U47 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => Syy_var_reg_1042,
        din1 => Sxx_var_reg_994,
        ce => grp_fu_386_ce,
        dout => grp_fu_386_p2);

    mul_32s_32s_32_5_1_U48 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => Sxy_var_reg_1090,
        din1 => Sxy_var_reg_1090,
        ce => grp_fu_390_ce,
        dout => grp_fu_390_p2);

    mul_32s_32s_32_5_1_U49 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => Syy_var_1_reg_1048,
        din1 => Sxx_var_1_reg_1000,
        ce => grp_fu_398_ce,
        dout => grp_fu_398_p2);

    mul_32s_32s_32_5_1_U50 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => Sxy_var_1_reg_1096,
        din1 => Sxy_var_1_reg_1096,
        ce => grp_fu_402_ce,
        dout => grp_fu_402_p2);

    mul_32s_32s_32_5_1_U51 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_37_i_reg_1054,
        din1 => tmp_31_i7_reg_1006,
        ce => grp_fu_410_ce,
        dout => grp_fu_410_p2);

    mul_32s_32s_32_5_1_U52 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_43_i_reg_1102,
        din1 => tmp_43_i_reg_1102,
        ce => grp_fu_414_ce,
        dout => grp_fu_414_p2);

    mul_32s_32s_32_5_1_U53 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_38_i_reg_1060,
        din1 => tmp_32_i8_reg_1012,
        ce => grp_fu_422_ce,
        dout => grp_fu_422_p2);

    mul_32s_32s_32_5_1_U54 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_44_i_reg_1108,
        din1 => tmp_44_i_reg_1108,
        ce => grp_fu_426_ce,
        dout => grp_fu_426_p2);

    mul_32s_32s_32_5_1_U55 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_39_i_reg_1066,
        din1 => tmp_33_i9_reg_1018,
        ce => grp_fu_434_ce,
        dout => grp_fu_434_p2);

    mul_32s_32s_32_5_1_U56 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_45_i_reg_1114,
        din1 => tmp_45_i_reg_1114,
        ce => grp_fu_438_ce,
        dout => grp_fu_438_p2);

    mul_32s_32s_32_5_1_U57 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_40_i_reg_1072,
        din1 => tmp_34_i_reg_1024,
        ce => grp_fu_446_ce,
        dout => grp_fu_446_p2);

    mul_32s_32s_32_5_1_U58 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_46_i_reg_1120,
        din1 => tmp_46_i_reg_1120,
        ce => grp_fu_450_ce,
        dout => grp_fu_450_p2);

    mul_32s_32s_32_5_1_U59 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_41_i_reg_1078,
        din1 => tmp_35_i_reg_1030,
        ce => grp_fu_458_ce,
        dout => grp_fu_458_p2);

    mul_32s_32s_32_5_1_U60 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_47_i_reg_1126,
        din1 => tmp_47_i_reg_1126,
        ce => grp_fu_462_ce,
        dout => grp_fu_462_p2);

    mul_32s_32s_32_5_1_U61 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_42_i_reg_1084,
        din1 => tmp_36_i_reg_1036,
        ce => grp_fu_470_ce,
        dout => grp_fu_470_p2);

    mul_32s_32s_32_5_1_U62 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_48_i_reg_1132,
        din1 => tmp_48_i_reg_1132,
        ce => grp_fu_474_ce,
        dout => grp_fu_474_p2);

    mul_32s_32s_32_5_1_U63 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trace_reg_1138,
        din1 => trace_reg_1138,
        ce => grp_fu_478_ce,
        dout => grp_fu_478_p2);

    mul_32s_32s_32_5_1_U64 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trace_1_reg_1144,
        din1 => trace_1_reg_1144,
        ce => grp_fu_482_ce,
        dout => grp_fu_482_p2);

    mul_32s_32s_32_5_1_U65 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trace_2_reg_1150,
        din1 => trace_2_reg_1150,
        ce => grp_fu_486_ce,
        dout => grp_fu_486_p2);

    mul_32s_32s_32_5_1_U66 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trace_3_reg_1156,
        din1 => trace_3_reg_1156,
        ce => grp_fu_490_ce,
        dout => grp_fu_490_p2);

    mul_32s_32s_32_5_1_U67 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trace_4_reg_1162,
        din1 => trace_4_reg_1162,
        ce => grp_fu_494_ce,
        dout => grp_fu_494_p2);

    mul_32s_32s_32_5_1_U68 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trace_5_reg_1168,
        din1 => trace_5_reg_1168,
        ce => grp_fu_498_ce,
        dout => grp_fu_498_p2);

    mul_32s_32s_32_5_1_U69 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trace_6_reg_1174,
        din1 => trace_6_reg_1174,
        ce => grp_fu_502_ce,
        dout => grp_fu_502_p2);

    mul_32s_32s_32_5_1_U70 : component harris_mul_32s_32s_32_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => trace_7_reg_1180,
        din1 => trace_7_reg_1180,
        ce => grp_fu_506_ce,
        dout => grp_fu_506_p2);

    mul_32s_21ns_52_5_1_U71 : component harris_mul_32s_21ns_52_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => traceSquare_reg_1266,
        din1 => grp_fu_545_p1,
        ce => grp_fu_545_ce,
        dout => grp_fu_545_p2);

    mul_32s_21ns_52_5_1_U72 : component harris_mul_32s_21ns_52_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => traceSquare_1_reg_1276,
        din1 => grp_fu_553_p1,
        ce => grp_fu_553_ce,
        dout => grp_fu_553_p2);

    mul_32s_21ns_52_5_1_U73 : component harris_mul_32s_21ns_52_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => traceSquare_2_reg_1286,
        din1 => grp_fu_561_p1,
        ce => grp_fu_561_ce,
        dout => grp_fu_561_p2);

    mul_32s_21ns_52_5_1_U74 : component harris_mul_32s_21ns_52_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => traceSquare_3_reg_1296,
        din1 => grp_fu_569_p1,
        ce => grp_fu_569_ce,
        dout => grp_fu_569_p2);

    mul_32s_21ns_52_5_1_U75 : component harris_mul_32s_21ns_52_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => traceSquare_4_reg_1306,
        din1 => grp_fu_577_p1,
        ce => grp_fu_577_ce,
        dout => grp_fu_577_p2);

    mul_32s_21ns_52_5_1_U76 : component harris_mul_32s_21ns_52_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => traceSquare_5_reg_1316,
        din1 => grp_fu_585_p1,
        ce => grp_fu_585_ce,
        dout => grp_fu_585_p2);

    mul_32s_21ns_52_5_1_U77 : component harris_mul_32s_21ns_52_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => traceSquare_6_reg_1326,
        din1 => grp_fu_593_p1,
        ce => grp_fu_593_ce,
        dout => grp_fu_593_p2);

    mul_32s_21ns_52_5_1_U78 : component harris_mul_32s_21ns_52_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 21,
        dout_WIDTH => 52)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => traceSquare_7_reg_1336,
        din1 => grp_fu_601_p1,
        ce => grp_fu_601_ce,
        dout => grp_fu_601_p2);

    flow_control_loop_pipe_sequential_init_U : component harris_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter14_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln325_fu_143_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_96 <= add_ln325_fu_149_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_96 <= ap_const_lv12_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Sxx_var_1_reg_1000 <= SxxStream_dout(63 downto 32);
                Sxx_var_reg_994 <= Sxx_var_fu_160_p1;
                Sxy_var_1_reg_1096 <= SxyStream_dout(63 downto 32);
                Sxy_var_reg_1090 <= Sxy_var_fu_308_p1;
                Syy_var_1_reg_1048 <= SyyStream_dout(63 downto 32);
                Syy_var_reg_1042 <= Syy_var_fu_234_p1;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                tmp_31_i7_reg_1006 <= SxxStream_dout(95 downto 64);
                tmp_32_i8_reg_1012 <= SxxStream_dout(127 downto 96);
                tmp_33_i9_reg_1018 <= SxxStream_dout(159 downto 128);
                tmp_34_i_reg_1024 <= SxxStream_dout(191 downto 160);
                tmp_35_i_reg_1030 <= SxxStream_dout(223 downto 192);
                tmp_36_i_reg_1036 <= SxxStream_dout(255 downto 224);
                tmp_37_i_reg_1054 <= SyyStream_dout(95 downto 64);
                tmp_38_i_reg_1060 <= SyyStream_dout(127 downto 96);
                tmp_39_i_reg_1066 <= SyyStream_dout(159 downto 128);
                tmp_40_i_reg_1072 <= SyyStream_dout(191 downto 160);
                tmp_41_i_reg_1078 <= SyyStream_dout(223 downto 192);
                tmp_42_i_reg_1084 <= SyyStream_dout(255 downto 224);
                tmp_43_i_reg_1102 <= SxyStream_dout(95 downto 64);
                tmp_44_i_reg_1108 <= SxyStream_dout(127 downto 96);
                tmp_45_i_reg_1114 <= SxyStream_dout(159 downto 128);
                tmp_46_i_reg_1120 <= SxyStream_dout(191 downto 160);
                tmp_47_i_reg_1126 <= SxyStream_dout(223 downto 192);
                tmp_48_i_reg_1132 <= SxyStream_dout(255 downto 224);
                    zext_ln325_cast_reg_978(20 downto 0) <= zext_ln325_cast_fu_131_p1(20 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                det1_1_reg_1196 <= grp_fu_398_p2;
                det1_2_reg_1206 <= grp_fu_410_p2;
                det1_3_reg_1216 <= grp_fu_422_p2;
                det1_4_reg_1226 <= grp_fu_434_p2;
                det1_5_reg_1236 <= grp_fu_446_p2;
                det1_6_reg_1246 <= grp_fu_458_p2;
                det1_7_reg_1256 <= grp_fu_470_p2;
                det1_reg_1186 <= grp_fu_386_p2;
                det2_1_reg_1201 <= grp_fu_402_p2;
                det2_2_reg_1211 <= grp_fu_414_p2;
                det2_3_reg_1221 <= grp_fu_426_p2;
                det2_4_reg_1231 <= grp_fu_438_p2;
                det2_5_reg_1241 <= grp_fu_450_p2;
                det2_6_reg_1251 <= grp_fu_462_p2;
                det2_7_reg_1261 <= grp_fu_474_p2;
                det2_reg_1191 <= grp_fu_390_p2;
                det_1_reg_1281 <= det_1_fu_514_p2;
                det_1_reg_1281_pp0_iter10_reg <= det_1_reg_1281_pp0_iter9_reg;
                det_1_reg_1281_pp0_iter11_reg <= det_1_reg_1281_pp0_iter10_reg;
                det_1_reg_1281_pp0_iter12_reg <= det_1_reg_1281_pp0_iter11_reg;
                det_1_reg_1281_pp0_iter8_reg <= det_1_reg_1281;
                det_1_reg_1281_pp0_iter9_reg <= det_1_reg_1281_pp0_iter8_reg;
                det_2_reg_1291 <= det_2_fu_518_p2;
                det_2_reg_1291_pp0_iter10_reg <= det_2_reg_1291_pp0_iter9_reg;
                det_2_reg_1291_pp0_iter11_reg <= det_2_reg_1291_pp0_iter10_reg;
                det_2_reg_1291_pp0_iter12_reg <= det_2_reg_1291_pp0_iter11_reg;
                det_2_reg_1291_pp0_iter8_reg <= det_2_reg_1291;
                det_2_reg_1291_pp0_iter9_reg <= det_2_reg_1291_pp0_iter8_reg;
                det_3_reg_1301 <= det_3_fu_522_p2;
                det_3_reg_1301_pp0_iter10_reg <= det_3_reg_1301_pp0_iter9_reg;
                det_3_reg_1301_pp0_iter11_reg <= det_3_reg_1301_pp0_iter10_reg;
                det_3_reg_1301_pp0_iter12_reg <= det_3_reg_1301_pp0_iter11_reg;
                det_3_reg_1301_pp0_iter8_reg <= det_3_reg_1301;
                det_3_reg_1301_pp0_iter9_reg <= det_3_reg_1301_pp0_iter8_reg;
                det_4_reg_1311 <= det_4_fu_526_p2;
                det_4_reg_1311_pp0_iter10_reg <= det_4_reg_1311_pp0_iter9_reg;
                det_4_reg_1311_pp0_iter11_reg <= det_4_reg_1311_pp0_iter10_reg;
                det_4_reg_1311_pp0_iter12_reg <= det_4_reg_1311_pp0_iter11_reg;
                det_4_reg_1311_pp0_iter8_reg <= det_4_reg_1311;
                det_4_reg_1311_pp0_iter9_reg <= det_4_reg_1311_pp0_iter8_reg;
                det_5_reg_1321 <= det_5_fu_530_p2;
                det_5_reg_1321_pp0_iter10_reg <= det_5_reg_1321_pp0_iter9_reg;
                det_5_reg_1321_pp0_iter11_reg <= det_5_reg_1321_pp0_iter10_reg;
                det_5_reg_1321_pp0_iter12_reg <= det_5_reg_1321_pp0_iter11_reg;
                det_5_reg_1321_pp0_iter8_reg <= det_5_reg_1321;
                det_5_reg_1321_pp0_iter9_reg <= det_5_reg_1321_pp0_iter8_reg;
                det_6_reg_1331 <= det_6_fu_534_p2;
                det_6_reg_1331_pp0_iter10_reg <= det_6_reg_1331_pp0_iter9_reg;
                det_6_reg_1331_pp0_iter11_reg <= det_6_reg_1331_pp0_iter10_reg;
                det_6_reg_1331_pp0_iter12_reg <= det_6_reg_1331_pp0_iter11_reg;
                det_6_reg_1331_pp0_iter8_reg <= det_6_reg_1331;
                det_6_reg_1331_pp0_iter9_reg <= det_6_reg_1331_pp0_iter8_reg;
                det_7_reg_1341 <= det_7_fu_538_p2;
                det_7_reg_1341_pp0_iter10_reg <= det_7_reg_1341_pp0_iter9_reg;
                det_7_reg_1341_pp0_iter11_reg <= det_7_reg_1341_pp0_iter10_reg;
                det_7_reg_1341_pp0_iter12_reg <= det_7_reg_1341_pp0_iter11_reg;
                det_7_reg_1341_pp0_iter8_reg <= det_7_reg_1341;
                det_7_reg_1341_pp0_iter9_reg <= det_7_reg_1341_pp0_iter8_reg;
                det_reg_1271 <= det_fu_510_p2;
                det_reg_1271_pp0_iter10_reg <= det_reg_1271_pp0_iter9_reg;
                det_reg_1271_pp0_iter11_reg <= det_reg_1271_pp0_iter10_reg;
                det_reg_1271_pp0_iter12_reg <= det_reg_1271_pp0_iter11_reg;
                det_reg_1271_pp0_iter8_reg <= det_reg_1271;
                det_reg_1271_pp0_iter9_reg <= det_reg_1271_pp0_iter8_reg;
                p_Val2_1_reg_1436 <= ret_V_2_fu_645_p2(51 downto 13);
                p_Val2_2_reg_1446 <= ret_V_4_fu_677_p2(51 downto 13);
                p_Val2_3_reg_1456 <= ret_V_6_fu_709_p2(51 downto 13);
                p_Val2_4_reg_1466 <= ret_V_8_fu_741_p2(51 downto 13);
                p_Val2_5_reg_1476 <= ret_V_10_fu_773_p2(51 downto 13);
                p_Val2_6_reg_1486 <= ret_V_12_fu_805_p2(51 downto 13);
                p_Val2_7_reg_1496 <= ret_V_14_fu_837_p2(51 downto 13);
                p_Val2_s_reg_1426 <= ret_V_fu_613_p2(51 downto 13);
                r_V_1_reg_1391 <= grp_fu_553_p2;
                r_V_2_reg_1396 <= grp_fu_561_p2;
                r_V_3_reg_1401 <= grp_fu_569_p2;
                r_V_4_reg_1406 <= grp_fu_577_p2;
                r_V_5_reg_1411 <= grp_fu_585_p2;
                r_V_6_reg_1416 <= grp_fu_593_p2;
                r_V_7_reg_1421 <= grp_fu_601_p2;
                r_V_reg_1386 <= grp_fu_545_p2;
                res_var_1_reg_1511 <= res_var_1_fu_879_p3;
                res_var_reg_1506 <= res_var_fu_867_p3;
                ret_V_11_reg_1481 <= ret_V_10_fu_773_p2(51 downto 20);
                ret_V_13_reg_1491 <= ret_V_12_fu_805_p2(51 downto 20);
                ret_V_15_reg_1501 <= ret_V_14_fu_837_p2(51 downto 20);
                ret_V_1_reg_1431 <= ret_V_fu_613_p2(51 downto 20);
                ret_V_3_reg_1441 <= ret_V_2_fu_645_p2(51 downto 20);
                ret_V_5_reg_1451 <= ret_V_4_fu_677_p2(51 downto 20);
                ret_V_7_reg_1461 <= ret_V_6_fu_709_p2(51 downto 20);
                ret_V_9_reg_1471 <= ret_V_8_fu_741_p2(51 downto 20);
                select_ln1695_1_reg_1521 <= select_ln1695_1_fu_903_p3;
                select_ln1695_2_reg_1526 <= select_ln1695_2_fu_915_p3;
                select_ln1695_3_reg_1531 <= select_ln1695_3_fu_927_p3;
                select_ln1695_4_reg_1536 <= select_ln1695_4_fu_939_p3;
                select_ln1695_5_reg_1541 <= select_ln1695_5_fu_951_p3;
                select_ln1695_reg_1516 <= select_ln1695_fu_891_p3;
                traceSquare_1_reg_1276 <= grp_fu_482_p2;
                traceSquare_2_reg_1286 <= grp_fu_486_p2;
                traceSquare_3_reg_1296 <= grp_fu_490_p2;
                traceSquare_4_reg_1306 <= grp_fu_494_p2;
                traceSquare_5_reg_1316 <= grp_fu_498_p2;
                traceSquare_6_reg_1326 <= grp_fu_502_p2;
                traceSquare_7_reg_1336 <= grp_fu_506_p2;
                traceSquare_reg_1266 <= grp_fu_478_p2;
                trace_1_reg_1144 <= trace_1_fu_394_p2;
                trace_2_reg_1150 <= trace_2_fu_406_p2;
                trace_3_reg_1156 <= trace_3_fu_418_p2;
                trace_4_reg_1162 <= trace_4_fu_430_p2;
                trace_5_reg_1168 <= trace_5_fu_442_p2;
                trace_6_reg_1174 <= trace_6_fu_454_p2;
                trace_7_reg_1180 <= trace_7_fu_466_p2;
                trace_reg_1138 <= trace_fu_382_p2;
            end if;
        end if;
    end process;
    zext_ln325_cast_reg_978(51 downto 21) <= "0000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    RStream_blk_n_assign_proc : process(ap_enable_reg_pp0_iter15, RStream_full_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            RStream_blk_n <= RStream_full_n;
        else 
            RStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    RStream_din <= (((((((select_ln1695_5_reg_1541 & select_ln1695_4_reg_1536) & select_ln1695_3_reg_1531) & select_ln1695_2_reg_1526) & select_ln1695_1_reg_1521) & select_ln1695_reg_1516) & res_var_1_reg_1511) & res_var_reg_1506);

    RStream_write_assign_proc : process(ap_enable_reg_pp0_iter15, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            RStream_write <= ap_const_logic_1;
        else 
            RStream_write <= ap_const_logic_0;
        end if; 
    end process;


    SxxStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, SxxStream_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            SxxStream_blk_n <= SxxStream_empty_n;
        else 
            SxxStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    SxxStream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            SxxStream_read <= ap_const_logic_1;
        else 
            SxxStream_read <= ap_const_logic_0;
        end if; 
    end process;

    Sxx_var_fu_160_p1 <= SxxStream_dout(32 - 1 downto 0);

    SxyStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, SxyStream_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            SxyStream_blk_n <= SxyStream_empty_n;
        else 
            SxyStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    SxyStream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            SxyStream_read <= ap_const_logic_1;
        else 
            SxyStream_read <= ap_const_logic_0;
        end if; 
    end process;

    Sxy_var_fu_308_p1 <= SxyStream_dout(32 - 1 downto 0);

    SyyStream_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, SyyStream_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            SyyStream_blk_n <= SyyStream_empty_n;
        else 
            SyyStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    SyyStream_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            SyyStream_read <= ap_const_logic_1;
        else 
            SyyStream_read <= ap_const_logic_0;
        end if; 
    end process;

    Syy_var_fu_234_p1 <= SyyStream_dout(32 - 1 downto 0);
    add_ln325_fu_149_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv12_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter15, SxxStream_empty_n, SyyStream_empty_n, SxyStream_empty_n, RStream_full_n)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = SxyStream_empty_n) or (ap_const_logic_0 = SyyStream_empty_n) or (ap_const_logic_0 = SxxStream_empty_n))) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_0 = RStream_full_n)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter15, SxxStream_empty_n, SyyStream_empty_n, SxyStream_empty_n, RStream_full_n)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = SxyStream_empty_n) or (ap_const_logic_0 = SyyStream_empty_n) or (ap_const_logic_0 = SxxStream_empty_n))) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_0 = RStream_full_n)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter15, SxxStream_empty_n, SyyStream_empty_n, SxyStream_empty_n, RStream_full_n)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = SxyStream_empty_n) or (ap_const_logic_0 = SyyStream_empty_n) or (ap_const_logic_0 = SxxStream_empty_n))) or ((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_logic_0 = RStream_full_n)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp0_stage0_iter15_assign_proc : process(RStream_full_n)
    begin
                ap_block_state16_pp0_stage0_iter15 <= (ap_const_logic_0 = RStream_full_n);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(SxxStream_empty_n, SyyStream_empty_n, SxyStream_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_const_logic_0 = SxyStream_empty_n) or (ap_const_logic_0 = SyyStream_empty_n) or (ap_const_logic_0 = SxxStream_empty_n));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln325_fu_143_p2)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln325_fu_143_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter14_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15)
    begin
        if (((ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten_fu_96, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv12_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_96;
        end if; 
    end process;

    det_1_fu_514_p2 <= std_logic_vector(unsigned(det1_1_reg_1196) - unsigned(det2_1_reg_1201));
    det_2_fu_518_p2 <= std_logic_vector(unsigned(det1_2_reg_1206) - unsigned(det2_2_reg_1211));
    det_3_fu_522_p2 <= std_logic_vector(unsigned(det1_3_reg_1216) - unsigned(det2_3_reg_1221));
    det_4_fu_526_p2 <= std_logic_vector(unsigned(det1_4_reg_1226) - unsigned(det2_4_reg_1231));
    det_5_fu_530_p2 <= std_logic_vector(unsigned(det1_5_reg_1236) - unsigned(det2_5_reg_1241));
    det_6_fu_534_p2 <= std_logic_vector(unsigned(det1_6_reg_1246) - unsigned(det2_6_reg_1251));
    det_7_fu_538_p2 <= std_logic_vector(unsigned(det1_7_reg_1256) - unsigned(det2_7_reg_1261));
    det_fu_510_p2 <= std_logic_vector(unsigned(det1_reg_1186) - unsigned(det2_reg_1191));

    grp_fu_386_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_386_ce <= ap_const_logic_1;
        else 
            grp_fu_386_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_390_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_390_ce <= ap_const_logic_1;
        else 
            grp_fu_390_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_398_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_398_ce <= ap_const_logic_1;
        else 
            grp_fu_398_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_402_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_402_ce <= ap_const_logic_1;
        else 
            grp_fu_402_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_410_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_410_ce <= ap_const_logic_1;
        else 
            grp_fu_410_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_414_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_414_ce <= ap_const_logic_1;
        else 
            grp_fu_414_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_422_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_422_ce <= ap_const_logic_1;
        else 
            grp_fu_422_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_426_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_426_ce <= ap_const_logic_1;
        else 
            grp_fu_426_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_434_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_434_ce <= ap_const_logic_1;
        else 
            grp_fu_434_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_438_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_438_ce <= ap_const_logic_1;
        else 
            grp_fu_438_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_446_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_446_ce <= ap_const_logic_1;
        else 
            grp_fu_446_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_450_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_450_ce <= ap_const_logic_1;
        else 
            grp_fu_450_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_458_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_458_ce <= ap_const_logic_1;
        else 
            grp_fu_458_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_462_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_462_ce <= ap_const_logic_1;
        else 
            grp_fu_462_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_470_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_470_ce <= ap_const_logic_1;
        else 
            grp_fu_470_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_474_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_474_ce <= ap_const_logic_1;
        else 
            grp_fu_474_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_478_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_478_ce <= ap_const_logic_1;
        else 
            grp_fu_478_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_482_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_482_ce <= ap_const_logic_1;
        else 
            grp_fu_482_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_486_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_486_ce <= ap_const_logic_1;
        else 
            grp_fu_486_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_490_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_490_ce <= ap_const_logic_1;
        else 
            grp_fu_490_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_494_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_494_ce <= ap_const_logic_1;
        else 
            grp_fu_494_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_498_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_498_ce <= ap_const_logic_1;
        else 
            grp_fu_498_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_502_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_502_ce <= ap_const_logic_1;
        else 
            grp_fu_502_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_506_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_506_ce <= ap_const_logic_1;
        else 
            grp_fu_506_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_545_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_545_ce <= ap_const_logic_1;
        else 
            grp_fu_545_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_545_p1 <= zext_ln325_cast_reg_978(21 - 1 downto 0);

    grp_fu_553_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_553_ce <= ap_const_logic_1;
        else 
            grp_fu_553_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_553_p1 <= zext_ln325_cast_reg_978(21 - 1 downto 0);

    grp_fu_561_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_561_ce <= ap_const_logic_1;
        else 
            grp_fu_561_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_561_p1 <= zext_ln325_cast_reg_978(21 - 1 downto 0);

    grp_fu_569_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_569_ce <= ap_const_logic_1;
        else 
            grp_fu_569_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_569_p1 <= zext_ln325_cast_reg_978(21 - 1 downto 0);

    grp_fu_577_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_577_ce <= ap_const_logic_1;
        else 
            grp_fu_577_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_577_p1 <= zext_ln325_cast_reg_978(21 - 1 downto 0);

    grp_fu_585_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_585_ce <= ap_const_logic_1;
        else 
            grp_fu_585_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_585_p1 <= zext_ln325_cast_reg_978(21 - 1 downto 0);

    grp_fu_593_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_593_ce <= ap_const_logic_1;
        else 
            grp_fu_593_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_593_p1 <= zext_ln325_cast_reg_978(21 - 1 downto 0);

    grp_fu_601_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_601_ce <= ap_const_logic_1;
        else 
            grp_fu_601_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_601_p1 <= zext_ln325_cast_reg_978(21 - 1 downto 0);
    icmp_ln1695_1_fu_874_p2 <= "1" when (signed(p_Val2_1_reg_1436) > signed(ap_const_lv39_DD00)) else "0";
    icmp_ln1695_2_fu_886_p2 <= "1" when (signed(p_Val2_2_reg_1446) > signed(ap_const_lv39_DD00)) else "0";
    icmp_ln1695_3_fu_898_p2 <= "1" when (signed(p_Val2_3_reg_1456) > signed(ap_const_lv39_DD00)) else "0";
    icmp_ln1695_4_fu_910_p2 <= "1" when (signed(p_Val2_4_reg_1466) > signed(ap_const_lv39_DD00)) else "0";
    icmp_ln1695_5_fu_922_p2 <= "1" when (signed(p_Val2_5_reg_1476) > signed(ap_const_lv39_DD00)) else "0";
    icmp_ln1695_6_fu_934_p2 <= "1" when (signed(p_Val2_6_reg_1486) > signed(ap_const_lv39_DD00)) else "0";
    icmp_ln1695_7_fu_946_p2 <= "1" when (signed(p_Val2_7_reg_1496) > signed(ap_const_lv39_DD00)) else "0";
    icmp_ln1695_fu_862_p2 <= "1" when (signed(p_Val2_s_reg_1426) > signed(ap_const_lv39_DD00)) else "0";
    icmp_ln325_fu_143_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv12_85E) else "0";
    lhs_11_fu_766_p3 <= (det_5_reg_1321_pp0_iter12_reg & ap_const_lv20_0);
    lhs_13_fu_798_p3 <= (det_6_reg_1331_pp0_iter12_reg & ap_const_lv20_0);
    lhs_15_fu_830_p3 <= (det_7_reg_1341_pp0_iter12_reg & ap_const_lv20_0);
    lhs_1_fu_606_p3 <= (det_reg_1271_pp0_iter12_reg & ap_const_lv20_0);
    lhs_3_fu_638_p3 <= (det_1_reg_1281_pp0_iter12_reg & ap_const_lv20_0);
    lhs_5_fu_670_p3 <= (det_2_reg_1291_pp0_iter12_reg & ap_const_lv20_0);
    lhs_7_fu_702_p3 <= (det_3_reg_1301_pp0_iter12_reg & ap_const_lv20_0);
    lhs_9_fu_734_p3 <= (det_4_reg_1311_pp0_iter12_reg & ap_const_lv20_0);
    res_var_1_fu_879_p3 <= 
        ret_V_3_reg_1441 when (icmp_ln1695_1_fu_874_p2(0) = '1') else 
        ap_const_lv32_0;
    res_var_fu_867_p3 <= 
        ret_V_1_reg_1431 when (icmp_ln1695_fu_862_p2(0) = '1') else 
        ap_const_lv32_0;
    ret_V_10_fu_773_p2 <= std_logic_vector(unsigned(lhs_11_fu_766_p3) - unsigned(r_V_5_reg_1411));
    ret_V_12_fu_805_p2 <= std_logic_vector(unsigned(lhs_13_fu_798_p3) - unsigned(r_V_6_reg_1416));
    ret_V_14_fu_837_p2 <= std_logic_vector(unsigned(lhs_15_fu_830_p3) - unsigned(r_V_7_reg_1421));
    ret_V_2_fu_645_p2 <= std_logic_vector(unsigned(lhs_3_fu_638_p3) - unsigned(r_V_1_reg_1391));
    ret_V_4_fu_677_p2 <= std_logic_vector(unsigned(lhs_5_fu_670_p3) - unsigned(r_V_2_reg_1396));
    ret_V_6_fu_709_p2 <= std_logic_vector(unsigned(lhs_7_fu_702_p3) - unsigned(r_V_3_reg_1401));
    ret_V_8_fu_741_p2 <= std_logic_vector(unsigned(lhs_9_fu_734_p3) - unsigned(r_V_4_reg_1406));
    ret_V_fu_613_p2 <= std_logic_vector(unsigned(lhs_1_fu_606_p3) - unsigned(r_V_reg_1386));
    select_ln1695_1_fu_903_p3 <= 
        ret_V_7_reg_1461 when (icmp_ln1695_3_fu_898_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln1695_2_fu_915_p3 <= 
        ret_V_9_reg_1471 when (icmp_ln1695_4_fu_910_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln1695_3_fu_927_p3 <= 
        ret_V_11_reg_1481 when (icmp_ln1695_5_fu_922_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln1695_4_fu_939_p3 <= 
        ret_V_13_reg_1491 when (icmp_ln1695_6_fu_934_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln1695_5_fu_951_p3 <= 
        ret_V_15_reg_1501 when (icmp_ln1695_7_fu_946_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln1695_fu_891_p3 <= 
        ret_V_5_reg_1451 when (icmp_ln1695_2_fu_886_p2(0) = '1') else 
        ap_const_lv32_0;
    trace_1_fu_394_p2 <= std_logic_vector(signed(Syy_var_1_reg_1048) + signed(Sxx_var_1_reg_1000));
    trace_2_fu_406_p2 <= std_logic_vector(signed(tmp_37_i_reg_1054) + signed(tmp_31_i7_reg_1006));
    trace_3_fu_418_p2 <= std_logic_vector(signed(tmp_38_i_reg_1060) + signed(tmp_32_i8_reg_1012));
    trace_4_fu_430_p2 <= std_logic_vector(signed(tmp_39_i_reg_1066) + signed(tmp_33_i9_reg_1018));
    trace_5_fu_442_p2 <= std_logic_vector(signed(tmp_40_i_reg_1072) + signed(tmp_34_i_reg_1024));
    trace_6_fu_454_p2 <= std_logic_vector(signed(tmp_41_i_reg_1078) + signed(tmp_35_i_reg_1030));
    trace_7_fu_466_p2 <= std_logic_vector(signed(tmp_42_i_reg_1084) + signed(tmp_36_i_reg_1036));
    trace_fu_382_p2 <= std_logic_vector(signed(Syy_var_reg_1042) + signed(Sxx_var_reg_994));
    zext_ln325_cast_fu_131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln325),52));
end behav;
