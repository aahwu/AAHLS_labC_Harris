-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity harris_findCorner_Pipeline_VITIS_LOOP_375_1_VITIS_LOOP_376_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    RStream_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    RStream_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    RStream_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    RStream_empty_n : IN STD_LOGIC;
    RStream_read : OUT STD_LOGIC;
    outStream_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    outStream_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    outStream_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    outStream_full_n : IN STD_LOGIC;
    outStream_write : OUT STD_LOGIC );
end;


architecture behav of harris_findCorner_Pipeline_VITIS_LOOP_375_1_VITIS_LOOP_376_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv12_880 : STD_LOGIC_VECTOR (11 downto 0) := "100010000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_const_lv32_21F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_220 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000100000";
    constant ap_const_lv32_23F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_25F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_260 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001100000";
    constant ap_const_lv32_27F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_280 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010000000";
    constant ap_const_lv32_29F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_2A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010100000";
    constant ap_const_lv32_2BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_2C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011000000";
    constant ap_const_lv32_2DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011011111";
    constant ap_const_lv32_2E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011100000";
    constant ap_const_lv32_2FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011111111";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_3C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111000000";
    constant ap_const_lv32_3DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111011111";
    constant ap_const_lv32_3E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111100000";
    constant ap_const_lv32_3FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001111111111";
    constant ap_const_lv32_5E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010111100000";
    constant ap_const_lv32_5FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010111111111";
    constant ap_const_lv32_500 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010100000000";
    constant ap_const_lv32_300 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln375_reg_1709 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln375_reg_1709_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_reg_1764 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op73_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal select_ln368_1_reg_1760 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln368_1_reg_1760_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln434_reg_2083 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op238_write_state6 : BOOLEAN;
    signal and_ln404_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln404_reg_1774_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op249_write_state6 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln375_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal RStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal outStream_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln376_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln376_reg_1713 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln368_fu_426_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln368_reg_1719 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln368_reg_1719_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln368_reg_1719_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln368_reg_1719_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln375_1_fu_434_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln375_1_reg_1728 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1733 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp28_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp28_reg_1738 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp68_i7_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp68_i7_reg_1743 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln375_fu_478_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln375_reg_1748 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln376_fu_486_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln376_reg_1755 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln368_1_fu_497_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln368_1_reg_1760_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln368_1_reg_1760_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_52_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rowBuffer_addr_reg_1768 : STD_LOGIC_VECTOR (4 downto 0);
    signal rowBuffer_addr_reg_1768_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal and_ln404_fu_538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln404_reg_1774_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln404_reg_1774_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal obj_var_fu_552_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_assign_s_reg_1818 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_assign_s_reg_1823 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_assign_1_reg_1833 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_assign_1_reg_1838 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_assign_2_reg_1848 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_assign_2_reg_1853 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_assign_3_reg_1863 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_assign_3_reg_1868 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_assign_4_reg_1878 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_assign_4_reg_1883 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_assign_5_reg_1893 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_assign_5_reg_1898 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_assign_6_reg_1908 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_assign_6_reg_1913 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_assign_reg_1922 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_i_reg_1927 : STD_LOGIC_VECTOR (511 downto 0);
    signal tmp_40_i_reg_1932 : STD_LOGIC_VECTOR (255 downto 0);
    signal tmp_43_i_reg_1937 : STD_LOGIC_VECTOR (255 downto 0);
    signal icmp_ln120_fu_929_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1942 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_reg_1942_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_1_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_1_reg_1947 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_1_reg_1947_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_2_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_2_reg_1952 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_2_reg_1952_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_3_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_3_reg_1957 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_3_reg_1957_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_4_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_4_reg_1962 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_4_reg_1962_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_5_fu_956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_5_reg_1967 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_5_reg_1967_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_6_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_6_reg_1972 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_6_reg_1972_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_7_fu_965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_7_reg_1977 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_7_reg_1977_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_8_fu_970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_8_reg_1982 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_8_reg_1982_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_9_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_9_reg_1987 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_9_reg_1987_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_10_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_10_reg_1992 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_10_reg_1992_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_11_fu_983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_11_reg_1997 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_11_reg_1997_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_12_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_12_reg_2002 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_13_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_13_reg_2007 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_14_fu_996_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_14_reg_2012 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_15_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_15_reg_2017 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_9_fu_1033_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_9_reg_2022 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_10_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_10_reg_2028 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_11_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_11_reg_2034 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_12_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_12_reg_2040 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_9_fu_1183_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_9_reg_2046 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_8_fu_1190_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_8_reg_2051 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_7_fu_1197_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_7_reg_2056 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_21_fu_1204_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_21_reg_2061 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_20_fu_1217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_20_reg_2066 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln424_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln424_reg_2071 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln434_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln434_1_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln434_1_reg_2087 : STD_LOGIC_VECTOR (0 downto 0);
    signal rowBuffer_ce0 : STD_LOGIC;
    signal rowBuffer_we0 : STD_LOGIC;
    signal rowBuffer_d0 : STD_LOGIC_VECTOR (767 downto 0);
    signal rowBuffer_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal rowBuffer_ce1 : STD_LOGIC;
    signal rowBuffer_q1 : STD_LOGIC_VECTOR (767 downto 0);
    signal ap_phi_reg_pp0_iter0_obj_var_4_reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_obj_var_4_reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_obj_var_4_reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_obj_var_4_reg_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_obj_var_3_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_obj_var_3_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_obj_var_3_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_obj_var_3_reg_307 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_down_assign_3_reg_318 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_down_assign_3_reg_318 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_down_assign_3_reg_318 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_down_assign_3_reg_318 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_down_assign_4_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_down_assign_4_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_down_assign_4_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_down_assign_4_reg_329 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_down_assign_5_reg_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_down_assign_5_reg_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_down_assign_5_reg_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_down_assign_5_reg_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_down_assign_6_reg_351 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_down_assign_6_reg_351 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_down_assign_6_reg_351 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_down_assign_6_reg_351 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_down_assign_7_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_down_assign_7_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_down_assign_7_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_down_assign_7_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_obj_sroa_21_0_i_reg_373 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_obj_sroa_21_0_i_reg_373 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_obj_sroa_21_0_i_reg_373 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_obj_sroa_21_0_i_reg_373 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln434_cast_i_fu_513_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_194 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal i_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_fu_202 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln375_fu_408_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (11 downto 0);
    signal resTmp_fu_206 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_19_fu_1273_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_1_fu_210 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_18_fu_1266_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_2_fu_214 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_17_fu_1259_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_3_fu_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_16_fu_1252_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_4_fu_222 : STD_LOGIC_VECTOR (0 downto 0);
    signal resTmp_15_fu_1245_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal corner_var_fu_226 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_var_6_fu_1536_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_var_1_fu_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_var_7_fu_1529_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_sroa_6_1_i_fu_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln434_5_fu_1522_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_sroa_9_1_i_fu_238 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln434_4_fu_1515_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_sroa_12_1_i_fu_242 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln434_3_fu_1508_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_sroa_15_1_i_fu_246 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln434_2_fu_1501_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_sroa_18_1_i_fu_250 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln434_1_fu_1494_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_sroa_21_1_i_fu_254 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln434_fu_1487_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal windowBuffer_fu_258 : STD_LOGIC_VECTOR (1535 downto 0);
    signal windowBuffer_2_fu_901_p14 : STD_LOGIC_VECTOR (1535 downto 0);
    signal p_s_fu_1543_p9 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_fu_440_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_13_fu_456_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal cmp68_i_mid1_fu_502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_51_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_50_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln368_2_fu_507_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln404_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_i_fu_871_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal tmp_42_i_fu_881_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal tmp_44_i_fu_891_p4 : STD_LOGIC_VECTOR (255 downto 0);
    signal center_assign_fu_851_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal up_assign_fu_831_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal down_assign_fu_861_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_assign_fu_841_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln120_16_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_19_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_18_fu_1013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_17_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_12_fu_1027_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_13_fu_1021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_20_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_23_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_22_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_21_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_15_fu_1062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_16_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_24_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_27_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_26_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_25_fu_1078_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_18_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_19_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_28_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_31_fu_1122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_30_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_29_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_21_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_22_fu_1126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_10_fu_1168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_9_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln416_fu_1178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_1211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln434_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_8_fu_1172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_1_fu_1334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_fu_1330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_4_fu_1348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_3_fu_1344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_7_fu_1362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln120_6_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_1_fu_1352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln424_7_fu_1415_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln424_fu_1407_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln432_fu_1400_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln430_fu_1393_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln429_fu_1386_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln360_1_fu_1379_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln360_fu_1372_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_2_fu_1366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln424_1_fu_1423_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln363_fu_1479_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln424_2_fu_1430_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln424_3_fu_1437_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln424_4_fu_1444_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln424_5_fu_1451_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln424_6_fu_1458_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_var_5_fu_1465_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal corner_var_4_fu_1472_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_422 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component harris_findCorner_Pipeline_VITIS_LOOP_375_1_VITIS_LOOP_376_2_rowBuffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (767 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (767 downto 0) );
    end component;


    component harris_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    rowBuffer_U : component harris_findCorner_Pipeline_VITIS_LOOP_375_1_VITIS_LOOP_376_2_rowBuffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 768,
        AddressRange => 17,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rowBuffer_addr_reg_1768_pp0_iter2_reg,
        ce0 => rowBuffer_ce0,
        we0 => rowBuffer_we0,
        d0 => rowBuffer_d0,
        address1 => rowBuffer_address1,
        ce1 => rowBuffer_ce1,
        q1 => rowBuffer_q1);

    flow_control_loop_pipe_sequential_init_U : component harris_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter2_down_assign_3_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if (((icmp_ln375_reg_1709 = ap_const_lv1_0) and (empty_52_fu_527_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_down_assign_3_reg_318 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_down_assign_3_reg_318 <= ap_phi_reg_pp0_iter1_down_assign_3_reg_318;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_down_assign_4_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if (((icmp_ln375_reg_1709 = ap_const_lv1_0) and (empty_52_fu_527_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_down_assign_4_reg_329 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_down_assign_4_reg_329 <= ap_phi_reg_pp0_iter1_down_assign_4_reg_329;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_down_assign_5_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if (((icmp_ln375_reg_1709 = ap_const_lv1_0) and (empty_52_fu_527_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_down_assign_5_reg_340 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_down_assign_5_reg_340 <= ap_phi_reg_pp0_iter1_down_assign_5_reg_340;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_down_assign_6_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if (((icmp_ln375_reg_1709 = ap_const_lv1_0) and (empty_52_fu_527_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_down_assign_6_reg_351 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_down_assign_6_reg_351 <= ap_phi_reg_pp0_iter1_down_assign_6_reg_351;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_down_assign_7_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if (((icmp_ln375_reg_1709 = ap_const_lv1_0) and (empty_52_fu_527_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_down_assign_7_reg_362 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_down_assign_7_reg_362 <= ap_phi_reg_pp0_iter1_down_assign_7_reg_362;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_obj_sroa_21_0_i_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if (((icmp_ln375_reg_1709 = ap_const_lv1_0) and (empty_52_fu_527_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_obj_sroa_21_0_i_reg_373 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_obj_sroa_21_0_i_reg_373 <= ap_phi_reg_pp0_iter1_obj_sroa_21_0_i_reg_373;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_obj_var_3_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if (((icmp_ln375_reg_1709 = ap_const_lv1_0) and (empty_52_fu_527_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_obj_var_3_reg_307 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_obj_var_3_reg_307 <= ap_phi_reg_pp0_iter1_obj_var_3_reg_307;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_obj_var_4_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_422)) then
                if (((icmp_ln375_reg_1709 = ap_const_lv1_0) and (empty_52_fu_527_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter2_obj_var_4_reg_296 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_obj_var_4_reg_296 <= ap_phi_reg_pp0_iter1_obj_var_4_reg_296;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_down_assign_3_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_52_reg_1764 = ap_const_lv1_0) and (icmp_ln375_reg_1709_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_down_assign_3_reg_318 <= RStream_dout(95 downto 64);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_down_assign_3_reg_318 <= ap_phi_reg_pp0_iter2_down_assign_3_reg_318;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_down_assign_4_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_52_reg_1764 = ap_const_lv1_0) and (icmp_ln375_reg_1709_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_down_assign_4_reg_329 <= RStream_dout(127 downto 96);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_down_assign_4_reg_329 <= ap_phi_reg_pp0_iter2_down_assign_4_reg_329;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_down_assign_5_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_52_reg_1764 = ap_const_lv1_0) and (icmp_ln375_reg_1709_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_down_assign_5_reg_340 <= RStream_dout(159 downto 128);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_down_assign_5_reg_340 <= ap_phi_reg_pp0_iter2_down_assign_5_reg_340;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_down_assign_6_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_52_reg_1764 = ap_const_lv1_0) and (icmp_ln375_reg_1709_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_down_assign_6_reg_351 <= RStream_dout(191 downto 160);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_down_assign_6_reg_351 <= ap_phi_reg_pp0_iter2_down_assign_6_reg_351;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_down_assign_7_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_52_reg_1764 = ap_const_lv1_0) and (icmp_ln375_reg_1709_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_down_assign_7_reg_362 <= RStream_dout(223 downto 192);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_down_assign_7_reg_362 <= ap_phi_reg_pp0_iter2_down_assign_7_reg_362;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_obj_sroa_21_0_i_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_52_reg_1764 = ap_const_lv1_0) and (icmp_ln375_reg_1709_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_obj_sroa_21_0_i_reg_373 <= RStream_dout(255 downto 224);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_obj_sroa_21_0_i_reg_373 <= ap_phi_reg_pp0_iter2_obj_sroa_21_0_i_reg_373;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_obj_var_3_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_52_reg_1764 = ap_const_lv1_0) and (icmp_ln375_reg_1709_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_obj_var_3_reg_307 <= RStream_dout(63 downto 32);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_obj_var_3_reg_307 <= ap_phi_reg_pp0_iter2_obj_var_3_reg_307;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter3_obj_var_4_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((empty_52_reg_1764 = ap_const_lv1_0) and (icmp_ln375_reg_1709_pp0_iter1_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_obj_var_4_reg_296 <= obj_var_fu_552_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_obj_var_4_reg_296 <= ap_phi_reg_pp0_iter2_obj_var_4_reg_296;
                end if;
            end if; 
        end if;
    end process;

    i_fu_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_198 <= ap_const_lv8_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    i_fu_198 <= select_ln375_reg_1748;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_202_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln375_fu_402_p2 = ap_const_lv1_0))) then 
                    indvar_flatten_fu_202 <= add_ln375_fu_408_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_202 <= ap_const_lv12_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_194 <= ap_const_lv5_0;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    j_fu_194 <= add_ln376_reg_1755;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln375_fu_402_p2 = ap_const_lv1_0))) then
                add_ln375_1_reg_1728 <= add_ln375_1_fu_434_p2;
                add_ln376_reg_1755 <= add_ln376_fu_486_p2;
                cmp68_i7_reg_1743 <= cmp68_i7_fu_472_p2;
                icmp28_reg_1738 <= icmp28_fu_466_p2;
                icmp_ln376_reg_1713 <= icmp_ln376_fu_420_p2;
                icmp_reg_1733 <= icmp_fu_450_p2;
                select_ln368_reg_1719 <= select_ln368_fu_426_p3;
                select_ln375_reg_1748 <= select_ln375_fu_478_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln368_1_fu_497_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln404_reg_1774 <= and_ln404_fu_538_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                and_ln404_reg_1774_pp0_iter2_reg <= and_ln404_reg_1774;
                and_ln404_reg_1774_pp0_iter3_reg <= and_ln404_reg_1774_pp0_iter2_reg;
                and_ln404_reg_1774_pp0_iter4_reg <= and_ln404_reg_1774_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                icmp_ln120_10_reg_1992_pp0_iter4_reg <= icmp_ln120_10_reg_1992;
                icmp_ln120_11_reg_1997_pp0_iter4_reg <= icmp_ln120_11_reg_1997;
                icmp_ln120_1_reg_1947_pp0_iter4_reg <= icmp_ln120_1_reg_1947;
                icmp_ln120_2_reg_1952_pp0_iter4_reg <= icmp_ln120_2_reg_1952;
                icmp_ln120_3_reg_1957_pp0_iter4_reg <= icmp_ln120_3_reg_1957;
                icmp_ln120_4_reg_1962_pp0_iter4_reg <= icmp_ln120_4_reg_1962;
                icmp_ln120_5_reg_1967_pp0_iter4_reg <= icmp_ln120_5_reg_1967;
                icmp_ln120_6_reg_1972_pp0_iter4_reg <= icmp_ln120_6_reg_1972;
                icmp_ln120_7_reg_1977_pp0_iter4_reg <= icmp_ln120_7_reg_1977;
                icmp_ln120_8_reg_1982_pp0_iter4_reg <= icmp_ln120_8_reg_1982;
                icmp_ln120_9_reg_1987_pp0_iter4_reg <= icmp_ln120_9_reg_1987;
                icmp_ln120_reg_1942_pp0_iter4_reg <= icmp_ln120_reg_1942;
                right_assign_1_reg_1838 <= rowBuffer_q1(575 downto 544);
                right_assign_2_reg_1853 <= rowBuffer_q1(607 downto 576);
                right_assign_3_reg_1868 <= rowBuffer_q1(639 downto 608);
                right_assign_4_reg_1883 <= rowBuffer_q1(671 downto 640);
                right_assign_5_reg_1898 <= rowBuffer_q1(703 downto 672);
                right_assign_6_reg_1913 <= rowBuffer_q1(735 downto 704);
                right_assign_reg_1922 <= rowBuffer_q1(767 downto 736);
                right_assign_s_reg_1823 <= rowBuffer_q1(543 downto 512);
                rowBuffer_addr_reg_1768_pp0_iter2_reg <= rowBuffer_addr_reg_1768;
                select_ln368_1_reg_1760_pp0_iter2_reg <= select_ln368_1_reg_1760;
                select_ln368_1_reg_1760_pp0_iter3_reg <= select_ln368_1_reg_1760_pp0_iter2_reg;
                select_ln368_1_reg_1760_pp0_iter4_reg <= select_ln368_1_reg_1760_pp0_iter3_reg;
                select_ln368_reg_1719_pp0_iter2_reg <= select_ln368_reg_1719_pp0_iter1_reg;
                select_ln368_reg_1719_pp0_iter3_reg <= select_ln368_reg_1719_pp0_iter2_reg;
                tmp_39_i_reg_1927 <= rowBuffer_q1(767 downto 256);
                up_assign_1_reg_1833 <= rowBuffer_q1(319 downto 288);
                up_assign_2_reg_1848 <= rowBuffer_q1(351 downto 320);
                up_assign_3_reg_1863 <= rowBuffer_q1(383 downto 352);
                up_assign_4_reg_1878 <= rowBuffer_q1(415 downto 384);
                up_assign_5_reg_1893 <= rowBuffer_q1(447 downto 416);
                up_assign_6_reg_1908 <= rowBuffer_q1(479 downto 448);
                up_assign_s_reg_1818 <= rowBuffer_q1(287 downto 256);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln375_reg_1709 <= icmp_ln375_fu_402_p2;
                icmp_ln375_reg_1709_pp0_iter1_reg <= icmp_ln375_reg_1709;
                rowBuffer_addr_reg_1768 <= trunc_ln434_cast_i_fu_513_p1(5 - 1 downto 0);
                select_ln368_reg_1719_pp0_iter1_reg <= select_ln368_reg_1719;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_down_assign_3_reg_318 <= ap_phi_reg_pp0_iter0_down_assign_3_reg_318;
                ap_phi_reg_pp0_iter1_down_assign_4_reg_329 <= ap_phi_reg_pp0_iter0_down_assign_4_reg_329;
                ap_phi_reg_pp0_iter1_down_assign_5_reg_340 <= ap_phi_reg_pp0_iter0_down_assign_5_reg_340;
                ap_phi_reg_pp0_iter1_down_assign_6_reg_351 <= ap_phi_reg_pp0_iter0_down_assign_6_reg_351;
                ap_phi_reg_pp0_iter1_down_assign_7_reg_362 <= ap_phi_reg_pp0_iter0_down_assign_7_reg_362;
                ap_phi_reg_pp0_iter1_obj_sroa_21_0_i_reg_373 <= ap_phi_reg_pp0_iter0_obj_sroa_21_0_i_reg_373;
                ap_phi_reg_pp0_iter1_obj_var_3_reg_307 <= ap_phi_reg_pp0_iter0_obj_var_3_reg_307;
                ap_phi_reg_pp0_iter1_obj_var_4_reg_296 <= ap_phi_reg_pp0_iter0_obj_var_4_reg_296;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln368_1_reg_1760_pp0_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                corner_sroa_12_1_i_fu_242 <= select_ln434_3_fu_1508_p3;
                corner_sroa_15_1_i_fu_246 <= select_ln434_2_fu_1501_p3;
                corner_sroa_18_1_i_fu_250 <= select_ln434_1_fu_1494_p3;
                corner_sroa_21_1_i_fu_254 <= select_ln434_fu_1487_p3;
                corner_sroa_6_1_i_fu_234 <= select_ln434_5_fu_1522_p3;
                corner_sroa_9_1_i_fu_238 <= select_ln434_4_fu_1515_p3;
                corner_var_1_fu_230 <= corner_var_7_fu_1529_p3;
                corner_var_fu_226 <= corner_var_6_fu_1536_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln375_reg_1709 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_52_reg_1764 <= empty_52_fu_527_p2;
                select_ln368_1_reg_1760 <= select_ln368_1_fu_497_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln368_1_reg_1760_pp0_iter2_reg = ap_const_lv1_0))) then
                icmp_ln120_10_reg_1992 <= icmp_ln120_10_fu_979_p2;
                icmp_ln120_11_reg_1997 <= icmp_ln120_11_fu_983_p2;
                icmp_ln120_12_reg_2002 <= icmp_ln120_12_fu_987_p2;
                icmp_ln120_13_reg_2007 <= icmp_ln120_13_fu_991_p2;
                icmp_ln120_14_reg_2012 <= icmp_ln120_14_fu_996_p2;
                icmp_ln120_15_reg_2017 <= icmp_ln120_15_fu_1000_p2;
                icmp_ln120_1_reg_1947 <= icmp_ln120_1_fu_935_p2;
                icmp_ln120_2_reg_1952 <= icmp_ln120_2_fu_941_p2;
                icmp_ln120_3_reg_1957 <= icmp_ln120_3_fu_946_p2;
                icmp_ln120_4_reg_1962 <= icmp_ln120_4_fu_952_p2;
                icmp_ln120_5_reg_1967 <= icmp_ln120_5_fu_956_p2;
                icmp_ln120_6_reg_1972 <= icmp_ln120_6_fu_961_p2;
                icmp_ln120_7_reg_1977 <= icmp_ln120_7_fu_965_p2;
                icmp_ln120_8_reg_1982 <= icmp_ln120_8_fu_970_p2;
                icmp_ln120_9_reg_1987 <= icmp_ln120_9_fu_974_p2;
                icmp_ln120_reg_1942 <= icmp_ln120_fu_929_p2;
                res_10_reg_2028 <= res_10_fu_1068_p2;
                res_11_reg_2034 <= res_11_fu_1103_p2;
                res_12_reg_2040 <= res_12_fu_1138_p2;
                res_9_reg_2022 <= res_9_fu_1033_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln368_1_reg_1760_pp0_iter3_reg = ap_const_lv1_0))) then
                icmp_ln424_reg_2071 <= icmp_ln424_fu_1223_p2;
                icmp_ln434_reg_2083 <= icmp_ln434_fu_1228_p2;
                or_ln434_1_reg_2087 <= or_ln434_1_fu_1239_p2;
                resTmp_20_reg_2066 <= resTmp_20_fu_1217_p2;
                resTmp_21_reg_2061 <= resTmp_21_fu_1204_p3;
                resTmp_7_reg_2056 <= resTmp_7_fu_1197_p3;
                resTmp_8_reg_2051 <= resTmp_8_fu_1190_p3;
                resTmp_9_reg_2046 <= resTmp_9_fu_1183_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (select_ln368_1_reg_1760_pp0_iter3_reg = ap_const_lv1_0))) then
                resTmp_1_fu_210 <= resTmp_18_fu_1266_p3;
                resTmp_2_fu_214 <= resTmp_17_fu_1259_p3;
                resTmp_3_fu_218 <= resTmp_16_fu_1252_p3;
                resTmp_4_fu_222 <= resTmp_15_fu_1245_p3;
                resTmp_fu_206 <= resTmp_19_fu_1273_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln368_1_reg_1760 = ap_const_lv1_0))) then
                tmp_40_i_reg_1932 <= rowBuffer_q1(767 downto 512);
                tmp_43_i_reg_1937 <= rowBuffer_q1(511 downto 256);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (select_ln368_1_reg_1760_pp0_iter2_reg = ap_const_lv1_0))) then
                windowBuffer_fu_258 <= windowBuffer_2_fu_901_p14;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    RStream_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, RStream_empty_n, ap_predicate_op73_read_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op73_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            RStream_blk_n <= RStream_empty_n;
        else 
            RStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    RStream_read_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op73_read_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op73_read_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            RStream_read <= ap_const_logic_1;
        else 
            RStream_read <= ap_const_logic_0;
        end if; 
    end process;

    add_ln375_1_fu_434_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv8_1));
    add_ln375_fu_408_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv12_1));
    add_ln376_fu_486_p2 <= std_logic_vector(unsigned(select_ln368_fu_426_p3) + unsigned(ap_const_lv5_1));
    and_ln120_10_fu_1168_p2 <= (icmp_ln120_15_reg_2017 and icmp_ln120_14_reg_2012);
    and_ln120_12_fu_1027_p2 <= (icmp_ln120_18_fu_1013_p2 and icmp_ln120_17_fu_1008_p2);
    and_ln120_13_fu_1021_p2 <= (icmp_ln120_19_fu_1017_p2 and icmp_ln120_16_fu_1004_p2);
    and_ln120_15_fu_1062_p2 <= (icmp_ln120_22_fu_1048_p2 and icmp_ln120_21_fu_1043_p2);
    and_ln120_16_fu_1056_p2 <= (icmp_ln120_23_fu_1052_p2 and icmp_ln120_20_fu_1039_p2);
    and_ln120_18_fu_1097_p2 <= (icmp_ln120_26_fu_1083_p2 and icmp_ln120_25_fu_1078_p2);
    and_ln120_19_fu_1091_p2 <= (icmp_ln120_27_fu_1087_p2 and icmp_ln120_24_fu_1074_p2);
    and_ln120_1_fu_1334_p2 <= (icmp_ln120_3_reg_1957_pp0_iter4_reg and icmp_ln120_2_reg_1952_pp0_iter4_reg);
    and_ln120_21_fu_1132_p2 <= (icmp_ln120_30_fu_1118_p2 and icmp_ln120_29_fu_1113_p2);
    and_ln120_22_fu_1126_p2 <= (icmp_ln120_31_fu_1122_p2 and icmp_ln120_28_fu_1109_p2);
    and_ln120_3_fu_1344_p2 <= (icmp_ln120_5_reg_1967_pp0_iter4_reg and icmp_ln120_4_reg_1962_pp0_iter4_reg);
    and_ln120_4_fu_1348_p2 <= (icmp_ln120_7_reg_1977_pp0_iter4_reg and icmp_ln120_6_reg_1972_pp0_iter4_reg);
    and_ln120_6_fu_1358_p2 <= (icmp_ln120_9_reg_1987_pp0_iter4_reg and icmp_ln120_8_reg_1982_pp0_iter4_reg);
    and_ln120_7_fu_1362_p2 <= (icmp_ln120_11_reg_1997_pp0_iter4_reg and icmp_ln120_10_reg_1992_pp0_iter4_reg);
    and_ln120_9_fu_1164_p2 <= (icmp_ln120_13_reg_2007 and icmp_ln120_12_reg_2002);
    and_ln120_fu_1330_p2 <= (icmp_ln120_reg_1942_pp0_iter4_reg and icmp_ln120_1_reg_1947_pp0_iter4_reg);
    and_ln404_fu_538_p2 <= (select_ln368_2_fu_507_p3 and icmp_ln404_fu_533_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, RStream_empty_n, ap_predicate_op73_read_state3, outStream_full_n, ap_predicate_op238_write_state6, ap_predicate_op249_write_state6)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (((ap_predicate_op249_write_state6 = ap_const_boolean_1) and (outStream_full_n = ap_const_logic_0)) or ((ap_predicate_op238_write_state6 = ap_const_boolean_1) and (outStream_full_n = ap_const_logic_0)))) or ((ap_predicate_op73_read_state3 = ap_const_boolean_1) and (ap_const_logic_0 = RStream_empty_n) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, RStream_empty_n, ap_predicate_op73_read_state3, outStream_full_n, ap_predicate_op238_write_state6, ap_predicate_op249_write_state6)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (((ap_predicate_op249_write_state6 = ap_const_boolean_1) and (outStream_full_n = ap_const_logic_0)) or ((ap_predicate_op238_write_state6 = ap_const_boolean_1) and (outStream_full_n = ap_const_logic_0)))) or ((ap_predicate_op73_read_state3 = ap_const_boolean_1) and (ap_const_logic_0 = RStream_empty_n) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter5, RStream_empty_n, ap_predicate_op73_read_state3, outStream_full_n, ap_predicate_op238_write_state6, ap_predicate_op249_write_state6)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (((ap_predicate_op249_write_state6 = ap_const_boolean_1) and (outStream_full_n = ap_const_logic_0)) or ((ap_predicate_op238_write_state6 = ap_const_boolean_1) and (outStream_full_n = ap_const_logic_0)))) or ((ap_predicate_op73_read_state3 = ap_const_boolean_1) and (ap_const_logic_0 = RStream_empty_n) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter2_assign_proc : process(RStream_empty_n, ap_predicate_op73_read_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op73_read_state3 = ap_const_boolean_1) and (ap_const_logic_0 = RStream_empty_n));
    end process;

        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter5_assign_proc : process(outStream_full_n, ap_predicate_op238_write_state6, ap_predicate_op249_write_state6)
    begin
                ap_block_state6_pp0_stage0_iter5 <= (((ap_predicate_op249_write_state6 = ap_const_boolean_1) and (outStream_full_n = ap_const_logic_0)) or ((ap_predicate_op238_write_state6 = ap_const_boolean_1) and (outStream_full_n = ap_const_logic_0)));
    end process;


    ap_condition_422_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_422 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln375_fu_402_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln375_fu_402_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter4_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_reg_pp0_iter0_down_assign_3_reg_318 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_down_assign_4_reg_329 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_down_assign_5_reg_340 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_down_assign_6_reg_351 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_down_assign_7_reg_362 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_obj_sroa_21_0_i_reg_373 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_obj_var_3_reg_307 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_obj_var_4_reg_296 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op238_write_state6_assign_proc : process(select_ln368_1_reg_1760_pp0_iter4_reg, icmp_ln434_reg_2083)
    begin
                ap_predicate_op238_write_state6 <= ((icmp_ln434_reg_2083 = ap_const_lv1_0) and (select_ln368_1_reg_1760_pp0_iter4_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op249_write_state6_assign_proc : process(select_ln368_1_reg_1760_pp0_iter4_reg, and_ln404_reg_1774_pp0_iter4_reg)
    begin
                ap_predicate_op249_write_state6 <= ((ap_const_lv1_1 = and_ln404_reg_1774_pp0_iter4_reg) and (select_ln368_1_reg_1760_pp0_iter4_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op73_read_state3_assign_proc : process(icmp_ln375_reg_1709_pp0_iter1_reg, empty_52_reg_1764)
    begin
                ap_predicate_op73_read_state3 <= ((empty_52_reg_1764 = ap_const_lv1_0) and (icmp_ln375_reg_1709_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, select_ln375_reg_1748, ap_loop_init, i_fu_198)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                ap_sig_allocacmp_i_load <= ap_const_lv8_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                ap_sig_allocacmp_i_load <= select_ln375_reg_1748;
            else 
                ap_sig_allocacmp_i_load <= i_fu_198;
            end if;
        else 
            ap_sig_allocacmp_i_load <= i_fu_198;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_202)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv12_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_202;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, add_ln376_reg_1755, j_fu_194, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
            if ((ap_loop_init = ap_const_logic_1)) then 
                ap_sig_allocacmp_j_load <= ap_const_lv5_0;
            elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                ap_sig_allocacmp_j_load <= add_ln376_reg_1755;
            else 
                ap_sig_allocacmp_j_load <= j_fu_194;
            end if;
        else 
            ap_sig_allocacmp_j_load <= j_fu_194;
        end if; 
    end process;

    center_assign_fu_851_p4 <= windowBuffer_fu_258(1023 downto 992);
    cmp68_i7_fu_472_p2 <= "1" when (ap_sig_allocacmp_i_load = ap_const_lv8_0) else "0";
    cmp68_i_mid1_fu_502_p2 <= "1" when (add_ln375_1_reg_1728 = ap_const_lv8_0) else "0";
    corner_var_4_fu_1472_p3 <= 
        select_ln360_fu_1372_p3 when (icmp_ln424_reg_2071(0) = '1') else 
        corner_var_fu_226;
    corner_var_5_fu_1465_p3 <= 
        select_ln360_1_fu_1379_p3 when (icmp_ln424_reg_2071(0) = '1') else 
        corner_var_1_fu_230;
    corner_var_6_fu_1536_p3 <= 
        corner_var_4_fu_1472_p3 when (or_ln434_1_reg_2087(0) = '1') else 
        select_ln360_fu_1372_p3;
    corner_var_7_fu_1529_p3 <= 
        corner_var_5_fu_1465_p3 when (or_ln434_1_reg_2087(0) = '1') else 
        select_ln360_1_fu_1379_p3;
    down_assign_fu_861_p4 <= windowBuffer_fu_258(1535 downto 1504);
    empty_50_fu_517_p2 <= "1" when (select_ln375_reg_1748 = ap_const_lv8_7F) else "0";
    empty_51_fu_522_p2 <= "1" when (select_ln375_reg_1748 = ap_const_lv8_0) else "0";
    empty_52_fu_527_p2 <= (empty_51_fu_522_p2 or empty_50_fu_517_p2);
    icmp28_fu_466_p2 <= "1" when (tmp_13_fu_456_p4 = ap_const_lv7_0) else "0";
    icmp_fu_450_p2 <= "1" when (tmp_fu_440_p4 = ap_const_lv7_0) else "0";
    icmp_ln120_10_fu_979_p2 <= "1" when (signed(right_assign_1_reg_1838) > signed(right_assign_2_reg_1853)) else "0";
    icmp_ln120_11_fu_983_p2 <= "1" when (signed(right_assign_1_reg_1838) > signed(right_assign_s_reg_1823)) else "0";
    icmp_ln120_12_fu_987_p2 <= "1" when (signed(right_assign_2_reg_1853) > signed(up_assign_2_reg_1848)) else "0";
    icmp_ln120_13_fu_991_p2 <= "1" when (signed(right_assign_2_reg_1853) > signed(ap_phi_reg_pp0_iter3_down_assign_3_reg_318)) else "0";
    icmp_ln120_14_fu_996_p2 <= "1" when (signed(right_assign_2_reg_1853) > signed(right_assign_3_reg_1868)) else "0";
    icmp_ln120_15_fu_1000_p2 <= "1" when (signed(right_assign_2_reg_1853) > signed(right_assign_1_reg_1838)) else "0";
    icmp_ln120_16_fu_1004_p2 <= "1" when (signed(right_assign_3_reg_1868) > signed(up_assign_3_reg_1863)) else "0";
    icmp_ln120_17_fu_1008_p2 <= "1" when (signed(right_assign_3_reg_1868) > signed(ap_phi_reg_pp0_iter3_down_assign_4_reg_329)) else "0";
    icmp_ln120_18_fu_1013_p2 <= "1" when (signed(right_assign_3_reg_1868) > signed(right_assign_4_reg_1883)) else "0";
    icmp_ln120_19_fu_1017_p2 <= "1" when (signed(right_assign_3_reg_1868) > signed(right_assign_2_reg_1853)) else "0";
    icmp_ln120_1_fu_935_p2 <= "1" when (signed(center_assign_fu_851_p4) > signed(down_assign_fu_861_p4)) else "0";
    icmp_ln120_20_fu_1039_p2 <= "1" when (signed(right_assign_4_reg_1883) > signed(up_assign_4_reg_1878)) else "0";
    icmp_ln120_21_fu_1043_p2 <= "1" when (signed(right_assign_4_reg_1883) > signed(ap_phi_reg_pp0_iter3_down_assign_5_reg_340)) else "0";
    icmp_ln120_22_fu_1048_p2 <= "1" when (signed(right_assign_4_reg_1883) > signed(right_assign_5_reg_1898)) else "0";
    icmp_ln120_23_fu_1052_p2 <= "1" when (signed(right_assign_4_reg_1883) > signed(right_assign_3_reg_1868)) else "0";
    icmp_ln120_24_fu_1074_p2 <= "1" when (signed(right_assign_5_reg_1898) > signed(up_assign_5_reg_1893)) else "0";
    icmp_ln120_25_fu_1078_p2 <= "1" when (signed(right_assign_5_reg_1898) > signed(ap_phi_reg_pp0_iter3_down_assign_6_reg_351)) else "0";
    icmp_ln120_26_fu_1083_p2 <= "1" when (signed(right_assign_5_reg_1898) > signed(right_assign_6_reg_1913)) else "0";
    icmp_ln120_27_fu_1087_p2 <= "1" when (signed(right_assign_5_reg_1898) > signed(right_assign_4_reg_1883)) else "0";
    icmp_ln120_28_fu_1109_p2 <= "1" when (signed(right_assign_6_reg_1913) > signed(up_assign_6_reg_1908)) else "0";
    icmp_ln120_29_fu_1113_p2 <= "1" when (signed(right_assign_6_reg_1913) > signed(ap_phi_reg_pp0_iter3_down_assign_7_reg_362)) else "0";
    icmp_ln120_2_fu_941_p2 <= "1" when (signed(center_assign_fu_851_p4) > signed(right_assign_s_reg_1823)) else "0";
    icmp_ln120_30_fu_1118_p2 <= "1" when (signed(right_assign_6_reg_1913) > signed(right_assign_reg_1922)) else "0";
    icmp_ln120_31_fu_1122_p2 <= "1" when (signed(right_assign_6_reg_1913) > signed(right_assign_5_reg_1898)) else "0";
    icmp_ln120_3_fu_946_p2 <= "1" when (signed(center_assign_fu_851_p4) > signed(left_assign_fu_841_p4)) else "0";
    icmp_ln120_4_fu_952_p2 <= "1" when (signed(right_assign_s_reg_1823) > signed(up_assign_s_reg_1818)) else "0";
    icmp_ln120_5_fu_956_p2 <= "1" when (signed(right_assign_s_reg_1823) > signed(ap_phi_reg_pp0_iter3_obj_var_4_reg_296)) else "0";
    icmp_ln120_6_fu_961_p2 <= "1" when (signed(right_assign_s_reg_1823) > signed(right_assign_1_reg_1838)) else "0";
    icmp_ln120_7_fu_965_p2 <= "1" when (signed(right_assign_s_reg_1823) > signed(center_assign_fu_851_p4)) else "0";
    icmp_ln120_8_fu_970_p2 <= "1" when (signed(right_assign_1_reg_1838) > signed(up_assign_1_reg_1833)) else "0";
    icmp_ln120_9_fu_974_p2 <= "1" when (signed(right_assign_1_reg_1838) > signed(ap_phi_reg_pp0_iter3_obj_var_3_reg_307)) else "0";
    icmp_ln120_fu_929_p2 <= "1" when (signed(center_assign_fu_851_p4) > signed(up_assign_fu_831_p4)) else "0";
    icmp_ln375_fu_402_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv12_880) else "0";
    icmp_ln376_fu_420_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv5_11) else "0";
    icmp_ln404_fu_533_p2 <= "0" when (select_ln368_reg_1719 = ap_const_lv5_10) else "1";
    icmp_ln416_fu_1178_p2 <= "1" when (select_ln368_reg_1719_pp0_iter3_reg = ap_const_lv5_1) else "0";
    icmp_ln424_fu_1223_p2 <= "1" when (select_ln368_reg_1719_pp0_iter3_reg = ap_const_lv5_10) else "0";
    icmp_ln434_fu_1228_p2 <= "1" when (select_ln368_reg_1719_pp0_iter3_reg = ap_const_lv5_0) else "0";
    left_assign_fu_841_p4 <= windowBuffer_fu_258(991 downto 960);
    obj_var_fu_552_p1 <= RStream_dout(32 - 1 downto 0);
    or_ln434_1_fu_1239_p2 <= (or_ln434_fu_1233_p2 or icmp_ln434_fu_1228_p2);
    or_ln434_fu_1233_p2 <= (icmp_ln424_fu_1223_p2 or icmp_ln416_fu_1178_p2);

    outStream_blk_n_assign_proc : process(ap_enable_reg_pp0_iter5, outStream_full_n, ap_predicate_op238_write_state6, ap_predicate_op249_write_state6, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op249_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op238_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)))) then 
            outStream_blk_n <= outStream_full_n;
        else 
            outStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    outStream_din_assign_proc : process(ap_enable_reg_pp0_iter5, ap_predicate_op238_write_state6, ap_predicate_op249_write_state6, p_s_fu_1543_p9, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
            if ((ap_predicate_op249_write_state6 = ap_const_boolean_1)) then 
                outStream_din <= ap_const_lv256_lc_1;
            elsif ((ap_predicate_op238_write_state6 = ap_const_boolean_1)) then 
                outStream_din <= p_s_fu_1543_p9;
            else 
                outStream_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            outStream_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    outStream_write_assign_proc : process(ap_enable_reg_pp0_iter5, ap_predicate_op238_write_state6, ap_predicate_op249_write_state6, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op249_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op238_write_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)))) then 
            outStream_write <= ap_const_logic_1;
        else 
            outStream_write <= ap_const_logic_0;
        end if; 
    end process;

    p_s_fu_1543_p9 <= (((((((select_ln434_fu_1487_p3 & select_ln434_1_fu_1494_p3) & select_ln434_2_fu_1501_p3) & select_ln434_3_fu_1508_p3) & select_ln434_4_fu_1515_p3) & select_ln434_5_fu_1522_p3) & corner_var_7_fu_1529_p3) & corner_var_6_fu_1536_p3);
    resTmp_15_fu_1245_p3 <= 
        resTmp_9_fu_1183_p3 when (or_ln434_1_fu_1239_p2(0) = '1') else 
        res_12_reg_2040;
    resTmp_16_fu_1252_p3 <= 
        resTmp_8_fu_1190_p3 when (or_ln434_1_fu_1239_p2(0) = '1') else 
        res_11_reg_2034;
    resTmp_17_fu_1259_p3 <= 
        resTmp_7_fu_1197_p3 when (or_ln434_1_fu_1239_p2(0) = '1') else 
        res_10_reg_2028;
    resTmp_18_fu_1266_p3 <= 
        resTmp_21_fu_1204_p3 when (or_ln434_1_fu_1239_p2(0) = '1') else 
        res_9_reg_2022;
    resTmp_19_fu_1273_p3 <= 
        resTmp_20_fu_1217_p2 when (or_ln434_1_fu_1239_p2(0) = '1') else 
        res_8_fu_1172_p2;
    resTmp_20_fu_1217_p2 <= (xor_ln416_fu_1211_p2 and resTmp_fu_206);
    resTmp_21_fu_1204_p3 <= 
        res_9_reg_2022 when (icmp_ln416_fu_1178_p2(0) = '1') else 
        resTmp_1_fu_210;
    resTmp_7_fu_1197_p3 <= 
        res_10_reg_2028 when (icmp_ln416_fu_1178_p2(0) = '1') else 
        resTmp_2_fu_214;
    resTmp_8_fu_1190_p3 <= 
        res_11_reg_2034 when (icmp_ln416_fu_1178_p2(0) = '1') else 
        resTmp_3_fu_218;
    resTmp_9_fu_1183_p3 <= 
        res_12_reg_2040 when (icmp_ln416_fu_1178_p2(0) = '1') else 
        resTmp_4_fu_222;
    res_10_fu_1068_p2 <= (and_ln120_16_fu_1056_p2 and and_ln120_15_fu_1062_p2);
    res_11_fu_1103_p2 <= (and_ln120_19_fu_1091_p2 and and_ln120_18_fu_1097_p2);
    res_12_fu_1138_p2 <= (and_ln120_22_fu_1126_p2 and and_ln120_21_fu_1132_p2);
    res_1_fu_1352_p2 <= (and_ln120_4_fu_1348_p2 and and_ln120_3_fu_1344_p2);
    res_2_fu_1366_p2 <= (and_ln120_7_fu_1362_p2 and and_ln120_6_fu_1358_p2);
    res_8_fu_1172_p2 <= (and_ln120_9_fu_1164_p2 and and_ln120_10_fu_1168_p2);
    res_9_fu_1033_p2 <= (and_ln120_13_fu_1021_p2 and and_ln120_12_fu_1027_p2);
    res_fu_1338_p2 <= (and_ln120_fu_1330_p2 and and_ln120_1_fu_1334_p2);
    rowBuffer_address1 <= trunc_ln434_cast_i_fu_513_p1(5 - 1 downto 0);

    rowBuffer_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            rowBuffer_ce0 <= ap_const_logic_1;
        else 
            rowBuffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rowBuffer_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rowBuffer_ce1 <= ap_const_logic_1;
        else 
            rowBuffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rowBuffer_d0 <= ((((((((ap_phi_reg_pp0_iter3_obj_sroa_21_0_i_reg_373 & ap_phi_reg_pp0_iter3_down_assign_7_reg_362) & ap_phi_reg_pp0_iter3_down_assign_6_reg_351) & ap_phi_reg_pp0_iter3_down_assign_5_reg_340) & ap_phi_reg_pp0_iter3_down_assign_4_reg_329) & ap_phi_reg_pp0_iter3_down_assign_3_reg_318) & ap_phi_reg_pp0_iter3_obj_var_3_reg_307) & ap_phi_reg_pp0_iter3_obj_var_4_reg_296) & tmp_39_i_reg_1927);

    rowBuffer_we0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            rowBuffer_we0 <= ap_const_logic_1;
        else 
            rowBuffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln360_1_fu_1379_p3 <= 
        ap_const_lv32_FF when (resTmp_21_reg_2061(0) = '1') else 
        ap_const_lv32_0;
    select_ln360_fu_1372_p3 <= 
        ap_const_lv32_FF when (resTmp_20_reg_2066(0) = '1') else 
        ap_const_lv32_0;
    select_ln363_fu_1479_p3 <= 
        ap_const_lv32_FF when (res_2_fu_1366_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln368_1_fu_497_p3 <= 
        icmp_reg_1733 when (icmp_ln376_reg_1713(0) = '1') else 
        icmp28_reg_1738;
    select_ln368_2_fu_507_p3 <= 
        cmp68_i_mid1_fu_502_p2 when (icmp_ln376_reg_1713(0) = '1') else 
        cmp68_i7_reg_1743;
    select_ln368_fu_426_p3 <= 
        ap_const_lv5_0 when (icmp_ln376_fu_420_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    select_ln375_fu_478_p3 <= 
        add_ln375_1_fu_434_p2 when (icmp_ln376_fu_420_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln424_1_fu_1423_p3 <= 
        ap_const_lv32_0 when (icmp_ln424_reg_2071(0) = '1') else 
        corner_sroa_21_1_i_fu_254;
    select_ln424_2_fu_1430_p3 <= 
        select_ln424_7_fu_1415_p3 when (icmp_ln424_reg_2071(0) = '1') else 
        corner_sroa_18_1_i_fu_250;
    select_ln424_3_fu_1437_p3 <= 
        select_ln424_fu_1407_p3 when (icmp_ln424_reg_2071(0) = '1') else 
        corner_sroa_15_1_i_fu_246;
    select_ln424_4_fu_1444_p3 <= 
        select_ln432_fu_1400_p3 when (icmp_ln424_reg_2071(0) = '1') else 
        corner_sroa_12_1_i_fu_242;
    select_ln424_5_fu_1451_p3 <= 
        select_ln430_fu_1393_p3 when (icmp_ln424_reg_2071(0) = '1') else 
        corner_sroa_9_1_i_fu_238;
    select_ln424_6_fu_1458_p3 <= 
        select_ln429_fu_1386_p3 when (icmp_ln424_reg_2071(0) = '1') else 
        corner_sroa_6_1_i_fu_234;
    select_ln424_7_fu_1415_p3 <= 
        ap_const_lv32_FF when (res_1_fu_1352_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln424_fu_1407_p3 <= 
        ap_const_lv32_FF when (res_fu_1338_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln429_fu_1386_p3 <= 
        ap_const_lv32_FF when (resTmp_7_reg_2056(0) = '1') else 
        ap_const_lv32_0;
    select_ln430_fu_1393_p3 <= 
        ap_const_lv32_FF when (resTmp_8_reg_2051(0) = '1') else 
        ap_const_lv32_0;
    select_ln432_fu_1400_p3 <= 
        ap_const_lv32_FF when (resTmp_9_reg_2046(0) = '1') else 
        ap_const_lv32_0;
    select_ln434_1_fu_1494_p3 <= 
        select_ln424_2_fu_1430_p3 when (or_ln434_1_reg_2087(0) = '1') else 
        select_ln424_7_fu_1415_p3;
    select_ln434_2_fu_1501_p3 <= 
        select_ln424_3_fu_1437_p3 when (or_ln434_1_reg_2087(0) = '1') else 
        select_ln424_fu_1407_p3;
    select_ln434_3_fu_1508_p3 <= 
        select_ln424_4_fu_1444_p3 when (or_ln434_1_reg_2087(0) = '1') else 
        select_ln432_fu_1400_p3;
    select_ln434_4_fu_1515_p3 <= 
        select_ln424_5_fu_1451_p3 when (or_ln434_1_reg_2087(0) = '1') else 
        select_ln430_fu_1393_p3;
    select_ln434_5_fu_1522_p3 <= 
        select_ln424_6_fu_1458_p3 when (or_ln434_1_reg_2087(0) = '1') else 
        select_ln429_fu_1386_p3;
    select_ln434_fu_1487_p3 <= 
        select_ln424_1_fu_1423_p3 when (or_ln434_1_reg_2087(0) = '1') else 
        select_ln363_fu_1479_p3;
    tmp_13_fu_456_p4 <= ap_sig_allocacmp_i_load(7 downto 1);
    tmp_41_i_fu_871_p4 <= windowBuffer_fu_258(1535 downto 1280);
    tmp_42_i_fu_881_p4 <= windowBuffer_fu_258(1023 downto 768);
    tmp_44_i_fu_891_p4 <= windowBuffer_fu_258(511 downto 256);
    tmp_fu_440_p4 <= add_ln375_1_fu_434_p2(7 downto 1);
    trunc_ln434_cast_i_fu_513_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln368_reg_1719),64));
    up_assign_fu_831_p4 <= windowBuffer_fu_258(511 downto 480);
    windowBuffer_2_fu_901_p14 <= ((((((((((((ap_phi_reg_pp0_iter3_obj_sroa_21_0_i_reg_373 & ap_phi_reg_pp0_iter3_down_assign_7_reg_362) & ap_phi_reg_pp0_iter3_down_assign_6_reg_351) & ap_phi_reg_pp0_iter3_down_assign_5_reg_340) & ap_phi_reg_pp0_iter3_down_assign_4_reg_329) & ap_phi_reg_pp0_iter3_down_assign_3_reg_318) & ap_phi_reg_pp0_iter3_obj_var_3_reg_307) & ap_phi_reg_pp0_iter3_obj_var_4_reg_296) & tmp_41_i_fu_871_p4) & tmp_40_i_reg_1932) & tmp_42_i_fu_881_p4) & tmp_43_i_reg_1937) & tmp_44_i_fu_891_p4);
    xor_ln416_fu_1211_p2 <= (icmp_ln416_fu_1178_p2 xor ap_const_lv1_1);
end behav;
