// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="harris_harris,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.371000,HLS_SYN_LAT=2240,HLS_SYN_TPT=2205,HLS_SYN_MEM=245,HLS_SYN_DSP=0,HLS_SYN_FF=55582,HLS_SYN_LUT=18305,HLS_VERSION=2022_1}" *)

module harris (
        imgSrc_address0,
        imgSrc_ce0,
        imgSrc_d0,
        imgSrc_q0,
        imgSrc_we0,
        imgSrc_address1,
        imgSrc_ce1,
        imgSrc_d1,
        imgSrc_q1,
        imgSrc_we1,
        imgDst_address0,
        imgDst_ce0,
        imgDst_d0,
        imgDst_q0,
        imgDst_we0,
        imgDst_address1,
        imgDst_ce1,
        imgDst_d1,
        imgDst_q1,
        imgDst_we1,
        alpha,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [10:0] imgSrc_address0;
output   imgSrc_ce0;
output  [255:0] imgSrc_d0;
input  [255:0] imgSrc_q0;
output   imgSrc_we0;
output  [10:0] imgSrc_address1;
output   imgSrc_ce1;
output  [255:0] imgSrc_d1;
input  [255:0] imgSrc_q1;
output   imgSrc_we1;
output  [10:0] imgDst_address0;
output   imgDst_ce0;
output  [255:0] imgDst_d0;
input  [255:0] imgDst_q0;
output   imgDst_we0;
output  [10:0] imgDst_address1;
output   imgDst_ce1;
output  [255:0] imgDst_d1;
input  [255:0] imgDst_q1;
output   imgDst_we1;
input  [63:0] alpha;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire    entry_proc_U0_start_out;
wire    entry_proc_U0_start_write;
wire   [63:0] entry_proc_U0_alpha_c_din;
wire    entry_proc_U0_alpha_c_write;
wire    read_input_U0_ap_start;
wire    read_input_U0_ap_done;
wire    read_input_U0_ap_continue;
wire    read_input_U0_ap_idle;
wire    read_input_U0_ap_ready;
wire   [255:0] read_input_U0_inStream_din;
wire    read_input_U0_inStream_write;
wire    read_input_U0_start_out;
wire    read_input_U0_start_write;
wire   [10:0] read_input_U0_imgSrc_address0;
wire    read_input_U0_imgSrc_ce0;
wire    sobel_U0_ap_start;
wire    sobel_U0_ap_done;
wire    sobel_U0_ap_continue;
wire    sobel_U0_ap_idle;
wire    sobel_U0_ap_ready;
wire    sobel_U0_inStream_read;
wire   [255:0] sobel_U0_GxxStream_din;
wire    sobel_U0_GxxStream_write;
wire   [255:0] sobel_U0_GyyStream_din;
wire    sobel_U0_GyyStream_write;
wire   [255:0] sobel_U0_GxyStream_din;
wire    sobel_U0_GxyStream_write;
wire    sobel_U0_start_out;
wire    sobel_U0_start_write;
wire    filter_U0_GxxStream_read;
wire   [255:0] filter_U0_SxxStream_din;
wire    filter_U0_SxxStream_write;
wire    filter_U0_GyyStream_read;
wire   [255:0] filter_U0_SyyStream_din;
wire    filter_U0_SyyStream_write;
wire    filter_U0_GxyStream_read;
wire   [255:0] filter_U0_SxyStream_din;
wire    filter_U0_SxyStream_write;
wire    filter_U0_ap_start;
wire    filter_U0_ap_done;
wire    filter_U0_ap_ready;
wire    filter_U0_ap_idle;
wire    filter_U0_ap_continue;
wire    response_U0_ap_start;
wire    response_U0_ap_done;
wire    response_U0_ap_continue;
wire    response_U0_ap_idle;
wire    response_U0_ap_ready;
wire    response_U0_start_out;
wire    response_U0_start_write;
wire    response_U0_alpha_read;
wire    response_U0_SxxStream_read;
wire    response_U0_SyyStream_read;
wire    response_U0_SxyStream_read;
wire   [255:0] response_U0_RStream_din;
wire    response_U0_RStream_write;
wire    findCorner_U0_ap_start;
wire    findCorner_U0_ap_done;
wire    findCorner_U0_ap_continue;
wire    findCorner_U0_ap_idle;
wire    findCorner_U0_ap_ready;
wire    findCorner_U0_start_out;
wire    findCorner_U0_start_write;
wire    findCorner_U0_RStream_read;
wire   [255:0] findCorner_U0_outStream_din;
wire    findCorner_U0_outStream_write;
wire    write_result_U0_ap_start;
wire    write_result_U0_ap_done;
wire    write_result_U0_ap_continue;
wire    write_result_U0_ap_idle;
wire    write_result_U0_ap_ready;
wire    write_result_U0_outStream_read;
wire   [10:0] write_result_U0_imgDst_address0;
wire    write_result_U0_imgDst_ce0;
wire    write_result_U0_imgDst_we0;
wire   [255:0] write_result_U0_imgDst_d0;
wire    alpha_c_full_n;
wire   [63:0] alpha_c_dout;
wire   [3:0] alpha_c_num_data_valid;
wire   [3:0] alpha_c_fifo_cap;
wire    alpha_c_empty_n;
wire    inStream_full_n;
wire   [255:0] inStream_dout;
wire   [4:0] inStream_num_data_valid;
wire   [4:0] inStream_fifo_cap;
wire    inStream_empty_n;
wire    GxxStream_full_n;
wire   [255:0] GxxStream_dout;
wire   [4:0] GxxStream_num_data_valid;
wire   [4:0] GxxStream_fifo_cap;
wire    GxxStream_empty_n;
wire    GyyStream_full_n;
wire   [255:0] GyyStream_dout;
wire   [4:0] GyyStream_num_data_valid;
wire   [4:0] GyyStream_fifo_cap;
wire    GyyStream_empty_n;
wire    GxyStream_full_n;
wire   [255:0] GxyStream_dout;
wire   [4:0] GxyStream_num_data_valid;
wire   [4:0] GxyStream_fifo_cap;
wire    GxyStream_empty_n;
wire    SxxStream_full_n;
wire   [255:0] SxxStream_dout;
wire   [4:0] SxxStream_num_data_valid;
wire   [4:0] SxxStream_fifo_cap;
wire    SxxStream_empty_n;
wire    SyyStream_full_n;
wire   [255:0] SyyStream_dout;
wire   [4:0] SyyStream_num_data_valid;
wire   [4:0] SyyStream_fifo_cap;
wire    SyyStream_empty_n;
wire    SxyStream_full_n;
wire   [255:0] SxyStream_dout;
wire   [4:0] SxyStream_num_data_valid;
wire   [4:0] SxyStream_fifo_cap;
wire    SxyStream_empty_n;
wire    RStream_full_n;
wire   [255:0] RStream_dout;
wire   [4:0] RStream_num_data_valid;
wire   [4:0] RStream_fifo_cap;
wire    RStream_empty_n;
wire    outStream_full_n;
wire   [255:0] outStream_dout;
wire   [4:0] outStream_num_data_valid;
wire   [4:0] outStream_fifo_cap;
wire    outStream_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_read_input_U0_ap_ready;
wire    ap_sync_read_input_U0_ap_ready;
wire   [0:0] start_for_response_U0_din;
wire    start_for_response_U0_full_n;
wire   [0:0] start_for_response_U0_dout;
wire    start_for_response_U0_empty_n;
wire   [0:0] start_for_sobel_U0_din;
wire    start_for_sobel_U0_full_n;
wire   [0:0] start_for_sobel_U0_dout;
wire    start_for_sobel_U0_empty_n;
wire   [0:0] start_for_filter_U0_din;
wire    start_for_filter_U0_full_n;
wire   [0:0] start_for_filter_U0_dout;
wire    start_for_filter_U0_empty_n;
wire   [0:0] start_for_findCorner_U0_din;
wire    start_for_findCorner_U0_full_n;
wire   [0:0] start_for_findCorner_U0_dout;
wire    start_for_findCorner_U0_empty_n;
wire   [0:0] start_for_write_result_U0_din;
wire    start_for_write_result_U0_full_n;
wire   [0:0] start_for_write_result_U0_dout;
wire    start_for_write_result_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_read_input_U0_ap_ready = 1'b0;
end

harris_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(entry_proc_U0_ap_start),
    .start_full_n(start_for_response_U0_full_n),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .start_out(entry_proc_U0_start_out),
    .start_write(entry_proc_U0_start_write),
    .alpha(alpha),
    .alpha_c_din(entry_proc_U0_alpha_c_din),
    .alpha_c_num_data_valid(alpha_c_num_data_valid),
    .alpha_c_fifo_cap(alpha_c_fifo_cap),
    .alpha_c_full_n(alpha_c_full_n),
    .alpha_c_write(entry_proc_U0_alpha_c_write)
);

harris_read_input read_input_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(read_input_U0_ap_start),
    .start_full_n(start_for_sobel_U0_full_n),
    .ap_done(read_input_U0_ap_done),
    .ap_continue(read_input_U0_ap_continue),
    .ap_idle(read_input_U0_ap_idle),
    .ap_ready(read_input_U0_ap_ready),
    .inStream_din(read_input_U0_inStream_din),
    .inStream_num_data_valid(inStream_num_data_valid),
    .inStream_fifo_cap(inStream_fifo_cap),
    .inStream_full_n(inStream_full_n),
    .inStream_write(read_input_U0_inStream_write),
    .start_out(read_input_U0_start_out),
    .start_write(read_input_U0_start_write),
    .imgSrc_address0(read_input_U0_imgSrc_address0),
    .imgSrc_ce0(read_input_U0_imgSrc_ce0),
    .imgSrc_q0(imgSrc_q0)
);

harris_sobel sobel_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(sobel_U0_ap_start),
    .start_full_n(start_for_filter_U0_full_n),
    .ap_done(sobel_U0_ap_done),
    .ap_continue(sobel_U0_ap_continue),
    .ap_idle(sobel_U0_ap_idle),
    .ap_ready(sobel_U0_ap_ready),
    .inStream_dout(inStream_dout),
    .inStream_num_data_valid(inStream_num_data_valid),
    .inStream_fifo_cap(inStream_fifo_cap),
    .inStream_empty_n(inStream_empty_n),
    .inStream_read(sobel_U0_inStream_read),
    .GxxStream_din(sobel_U0_GxxStream_din),
    .GxxStream_num_data_valid(GxxStream_num_data_valid),
    .GxxStream_fifo_cap(GxxStream_fifo_cap),
    .GxxStream_full_n(GxxStream_full_n),
    .GxxStream_write(sobel_U0_GxxStream_write),
    .GyyStream_din(sobel_U0_GyyStream_din),
    .GyyStream_num_data_valid(GyyStream_num_data_valid),
    .GyyStream_fifo_cap(GyyStream_fifo_cap),
    .GyyStream_full_n(GyyStream_full_n),
    .GyyStream_write(sobel_U0_GyyStream_write),
    .GxyStream_din(sobel_U0_GxyStream_din),
    .GxyStream_num_data_valid(GxyStream_num_data_valid),
    .GxyStream_fifo_cap(GxyStream_fifo_cap),
    .GxyStream_full_n(GxyStream_full_n),
    .GxyStream_write(sobel_U0_GxyStream_write),
    .start_out(sobel_U0_start_out),
    .start_write(sobel_U0_start_write)
);

harris_filter filter_U0(
    .GxxStream_dout(GxxStream_dout),
    .GxxStream_empty_n(GxxStream_empty_n),
    .GxxStream_read(filter_U0_GxxStream_read),
    .SxxStream_din(filter_U0_SxxStream_din),
    .SxxStream_full_n(SxxStream_full_n),
    .SxxStream_write(filter_U0_SxxStream_write),
    .GyyStream_dout(GyyStream_dout),
    .GyyStream_empty_n(GyyStream_empty_n),
    .GyyStream_read(filter_U0_GyyStream_read),
    .SyyStream_din(filter_U0_SyyStream_din),
    .SyyStream_full_n(SyyStream_full_n),
    .SyyStream_write(filter_U0_SyyStream_write),
    .GxyStream_dout(GxyStream_dout),
    .GxyStream_empty_n(GxyStream_empty_n),
    .GxyStream_read(filter_U0_GxyStream_read),
    .SxyStream_din(filter_U0_SxyStream_din),
    .SxyStream_full_n(SxyStream_full_n),
    .SxyStream_write(filter_U0_SxyStream_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(filter_U0_ap_start),
    .ap_done(filter_U0_ap_done),
    .ap_ready(filter_U0_ap_ready),
    .ap_idle(filter_U0_ap_idle),
    .ap_continue(filter_U0_ap_continue)
);

harris_response response_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(response_U0_ap_start),
    .start_full_n(start_for_findCorner_U0_full_n),
    .ap_done(response_U0_ap_done),
    .ap_continue(response_U0_ap_continue),
    .ap_idle(response_U0_ap_idle),
    .ap_ready(response_U0_ap_ready),
    .start_out(response_U0_start_out),
    .start_write(response_U0_start_write),
    .alpha_dout(alpha_c_dout),
    .alpha_num_data_valid(alpha_c_num_data_valid),
    .alpha_fifo_cap(alpha_c_fifo_cap),
    .alpha_empty_n(alpha_c_empty_n),
    .alpha_read(response_U0_alpha_read),
    .SxxStream_dout(SxxStream_dout),
    .SxxStream_num_data_valid(SxxStream_num_data_valid),
    .SxxStream_fifo_cap(SxxStream_fifo_cap),
    .SxxStream_empty_n(SxxStream_empty_n),
    .SxxStream_read(response_U0_SxxStream_read),
    .SyyStream_dout(SyyStream_dout),
    .SyyStream_num_data_valid(SyyStream_num_data_valid),
    .SyyStream_fifo_cap(SyyStream_fifo_cap),
    .SyyStream_empty_n(SyyStream_empty_n),
    .SyyStream_read(response_U0_SyyStream_read),
    .SxyStream_dout(SxyStream_dout),
    .SxyStream_num_data_valid(SxyStream_num_data_valid),
    .SxyStream_fifo_cap(SxyStream_fifo_cap),
    .SxyStream_empty_n(SxyStream_empty_n),
    .SxyStream_read(response_U0_SxyStream_read),
    .RStream_din(response_U0_RStream_din),
    .RStream_num_data_valid(RStream_num_data_valid),
    .RStream_fifo_cap(RStream_fifo_cap),
    .RStream_full_n(RStream_full_n),
    .RStream_write(response_U0_RStream_write)
);

harris_findCorner findCorner_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(findCorner_U0_ap_start),
    .start_full_n(start_for_write_result_U0_full_n),
    .ap_done(findCorner_U0_ap_done),
    .ap_continue(findCorner_U0_ap_continue),
    .ap_idle(findCorner_U0_ap_idle),
    .ap_ready(findCorner_U0_ap_ready),
    .start_out(findCorner_U0_start_out),
    .start_write(findCorner_U0_start_write),
    .RStream_dout(RStream_dout),
    .RStream_num_data_valid(RStream_num_data_valid),
    .RStream_fifo_cap(RStream_fifo_cap),
    .RStream_empty_n(RStream_empty_n),
    .RStream_read(findCorner_U0_RStream_read),
    .outStream_din(findCorner_U0_outStream_din),
    .outStream_num_data_valid(outStream_num_data_valid),
    .outStream_fifo_cap(outStream_fifo_cap),
    .outStream_full_n(outStream_full_n),
    .outStream_write(findCorner_U0_outStream_write)
);

harris_write_result write_result_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(write_result_U0_ap_start),
    .ap_done(write_result_U0_ap_done),
    .ap_continue(write_result_U0_ap_continue),
    .ap_idle(write_result_U0_ap_idle),
    .ap_ready(write_result_U0_ap_ready),
    .outStream_dout(outStream_dout),
    .outStream_num_data_valid(outStream_num_data_valid),
    .outStream_fifo_cap(outStream_fifo_cap),
    .outStream_empty_n(outStream_empty_n),
    .outStream_read(write_result_U0_outStream_read),
    .imgDst_address0(write_result_U0_imgDst_address0),
    .imgDst_ce0(write_result_U0_imgDst_ce0),
    .imgDst_we0(write_result_U0_imgDst_we0),
    .imgDst_d0(write_result_U0_imgDst_d0)
);

harris_fifo_w64_d5_S alpha_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_alpha_c_din),
    .if_full_n(alpha_c_full_n),
    .if_write(entry_proc_U0_alpha_c_write),
    .if_dout(alpha_c_dout),
    .if_num_data_valid(alpha_c_num_data_valid),
    .if_fifo_cap(alpha_c_fifo_cap),
    .if_empty_n(alpha_c_empty_n),
    .if_read(response_U0_alpha_read)
);

harris_fifo_w256_d16_A inStream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(read_input_U0_inStream_din),
    .if_full_n(inStream_full_n),
    .if_write(read_input_U0_inStream_write),
    .if_dout(inStream_dout),
    .if_num_data_valid(inStream_num_data_valid),
    .if_fifo_cap(inStream_fifo_cap),
    .if_empty_n(inStream_empty_n),
    .if_read(sobel_U0_inStream_read)
);

harris_fifo_w256_d16_A GxxStream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(sobel_U0_GxxStream_din),
    .if_full_n(GxxStream_full_n),
    .if_write(sobel_U0_GxxStream_write),
    .if_dout(GxxStream_dout),
    .if_num_data_valid(GxxStream_num_data_valid),
    .if_fifo_cap(GxxStream_fifo_cap),
    .if_empty_n(GxxStream_empty_n),
    .if_read(filter_U0_GxxStream_read)
);

harris_fifo_w256_d16_A GyyStream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(sobel_U0_GyyStream_din),
    .if_full_n(GyyStream_full_n),
    .if_write(sobel_U0_GyyStream_write),
    .if_dout(GyyStream_dout),
    .if_num_data_valid(GyyStream_num_data_valid),
    .if_fifo_cap(GyyStream_fifo_cap),
    .if_empty_n(GyyStream_empty_n),
    .if_read(filter_U0_GyyStream_read)
);

harris_fifo_w256_d16_A GxyStream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(sobel_U0_GxyStream_din),
    .if_full_n(GxyStream_full_n),
    .if_write(sobel_U0_GxyStream_write),
    .if_dout(GxyStream_dout),
    .if_num_data_valid(GxyStream_num_data_valid),
    .if_fifo_cap(GxyStream_fifo_cap),
    .if_empty_n(GxyStream_empty_n),
    .if_read(filter_U0_GxyStream_read)
);

harris_fifo_w256_d16_A SxxStream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(filter_U0_SxxStream_din),
    .if_full_n(SxxStream_full_n),
    .if_write(filter_U0_SxxStream_write),
    .if_dout(SxxStream_dout),
    .if_num_data_valid(SxxStream_num_data_valid),
    .if_fifo_cap(SxxStream_fifo_cap),
    .if_empty_n(SxxStream_empty_n),
    .if_read(response_U0_SxxStream_read)
);

harris_fifo_w256_d16_A SyyStream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(filter_U0_SyyStream_din),
    .if_full_n(SyyStream_full_n),
    .if_write(filter_U0_SyyStream_write),
    .if_dout(SyyStream_dout),
    .if_num_data_valid(SyyStream_num_data_valid),
    .if_fifo_cap(SyyStream_fifo_cap),
    .if_empty_n(SyyStream_empty_n),
    .if_read(response_U0_SyyStream_read)
);

harris_fifo_w256_d16_A SxyStream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(filter_U0_SxyStream_din),
    .if_full_n(SxyStream_full_n),
    .if_write(filter_U0_SxyStream_write),
    .if_dout(SxyStream_dout),
    .if_num_data_valid(SxyStream_num_data_valid),
    .if_fifo_cap(SxyStream_fifo_cap),
    .if_empty_n(SxyStream_empty_n),
    .if_read(response_U0_SxyStream_read)
);

harris_fifo_w256_d16_A RStream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(response_U0_RStream_din),
    .if_full_n(RStream_full_n),
    .if_write(response_U0_RStream_write),
    .if_dout(RStream_dout),
    .if_num_data_valid(RStream_num_data_valid),
    .if_fifo_cap(RStream_fifo_cap),
    .if_empty_n(RStream_empty_n),
    .if_read(findCorner_U0_RStream_read)
);

harris_fifo_w256_d16_A outStream_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(findCorner_U0_outStream_din),
    .if_full_n(outStream_full_n),
    .if_write(findCorner_U0_outStream_write),
    .if_dout(outStream_dout),
    .if_num_data_valid(outStream_num_data_valid),
    .if_fifo_cap(outStream_fifo_cap),
    .if_empty_n(outStream_empty_n),
    .if_read(write_result_U0_outStream_read)
);

harris_start_for_response_U0 start_for_response_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_response_U0_din),
    .if_full_n(start_for_response_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_response_U0_dout),
    .if_empty_n(start_for_response_U0_empty_n),
    .if_read(response_U0_ap_ready)
);

harris_start_for_sobel_U0 start_for_sobel_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_sobel_U0_din),
    .if_full_n(start_for_sobel_U0_full_n),
    .if_write(read_input_U0_start_write),
    .if_dout(start_for_sobel_U0_dout),
    .if_empty_n(start_for_sobel_U0_empty_n),
    .if_read(sobel_U0_ap_ready)
);

harris_start_for_filter_U0 start_for_filter_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_filter_U0_din),
    .if_full_n(start_for_filter_U0_full_n),
    .if_write(sobel_U0_start_write),
    .if_dout(start_for_filter_U0_dout),
    .if_empty_n(start_for_filter_U0_empty_n),
    .if_read(filter_U0_ap_ready)
);

harris_start_for_findCorner_U0 start_for_findCorner_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_findCorner_U0_din),
    .if_full_n(start_for_findCorner_U0_full_n),
    .if_write(response_U0_start_write),
    .if_dout(start_for_findCorner_U0_dout),
    .if_empty_n(start_for_findCorner_U0_empty_n),
    .if_read(findCorner_U0_ap_ready)
);

harris_start_for_write_result_U0 start_for_write_result_U0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_write_result_U0_din),
    .if_full_n(start_for_write_result_U0_full_n),
    .if_write(findCorner_U0_start_write),
    .if_dout(start_for_write_result_U0_dout),
    .if_empty_n(start_for_write_result_U0_empty_n),
    .if_read(write_result_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_read_input_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_input_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_input_U0_ap_ready <= ap_sync_read_input_U0_ap_ready;
        end
    end
end

assign ap_done = write_result_U0_ap_done;

assign ap_idle = (write_result_U0_ap_idle & sobel_U0_ap_idle & response_U0_ap_idle & read_input_U0_ap_idle & findCorner_U0_ap_idle & filter_U0_ap_idle & entry_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_read_input_U0_ap_ready = (read_input_U0_ap_ready | ap_sync_reg_read_input_U0_ap_ready);

assign ap_sync_ready = (ap_sync_read_input_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign filter_U0_ap_continue = 1'b1;

assign filter_U0_ap_start = start_for_filter_U0_empty_n;

assign findCorner_U0_ap_continue = 1'b1;

assign findCorner_U0_ap_start = start_for_findCorner_U0_empty_n;

assign imgDst_address0 = write_result_U0_imgDst_address0;

assign imgDst_address1 = 11'd0;

assign imgDst_ce0 = write_result_U0_imgDst_ce0;

assign imgDst_ce1 = 1'b0;

assign imgDst_d0 = write_result_U0_imgDst_d0;

assign imgDst_d1 = 256'd0;

assign imgDst_we0 = write_result_U0_imgDst_we0;

assign imgDst_we1 = 1'b0;

assign imgSrc_address0 = read_input_U0_imgSrc_address0;

assign imgSrc_address1 = 11'd0;

assign imgSrc_ce0 = read_input_U0_imgSrc_ce0;

assign imgSrc_ce1 = 1'b0;

assign imgSrc_d0 = 256'd0;

assign imgSrc_d1 = 256'd0;

assign imgSrc_we0 = 1'b0;

assign imgSrc_we1 = 1'b0;

assign read_input_U0_ap_continue = 1'b1;

assign read_input_U0_ap_start = ((ap_sync_reg_read_input_U0_ap_ready ^ 1'b1) & ap_start);

assign response_U0_ap_continue = 1'b1;

assign response_U0_ap_start = start_for_response_U0_empty_n;

assign sobel_U0_ap_continue = 1'b1;

assign sobel_U0_ap_start = start_for_sobel_U0_empty_n;

assign start_for_filter_U0_din = 1'b1;

assign start_for_findCorner_U0_din = 1'b1;

assign start_for_response_U0_din = 1'b1;

assign start_for_sobel_U0_din = 1'b1;

assign start_for_write_result_U0_din = 1'b1;

assign write_result_U0_ap_continue = ap_continue;

assign write_result_U0_ap_start = start_for_write_result_U0_empty_n;

endmodule //harris
